%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 288 84
%%HiResBoundingBox: 0 0 288 84.75
%%Creator: (Mathematica X 3.0)
%%Title: Clipboard
%%CreationDate: (Sometime) (Sometime)
%%DocumentNeededResources: (atend)
%%DocumentFonts: (atend)
%%DocumentNeededFonts: (atend)
%%EndComments
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def
/Mnodistort true def
/colorimage where
{ pop /Mcolorimage {colorimage} bind def /Mimage {image} bind def}
{
/colorimage {Mcolorimage} bind def
} ifelse
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		288.000000 def
/Mheight	84.750000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .2943 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.00700719 0.47619 [
[ 0 0 0 0 ]
[ 1 .2943 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .2943 L
0 .2943 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0238095 0.00700719 0.477324 0.287295 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.238095 0.303627 0.0796589 [
[.02381 .29113 -6 -9 ]
[.02381 .29113 6 0 ]
[.2619 .29113 -6 -9 ]
[.2619 .29113 6 0 ]
[.7381 .29113 -3 -9 ]
[.7381 .29113 3 0 ]
[.97619 .29113 -3 -9 ]
[.97619 .29113 3 0 ]
[.4875 .06465 -12 -4.5 ]
[.4875 .06465 0 4.5 ]
[.4875 .14431 -12 -4.5 ]
[.4875 .14431 0 4.5 ]
[.4875 .22397 -12 -4.5 ]
[.4875 .22397 0 4.5 ]
[.4875 .38329 -6 -4.5 ]
[.4875 .38329 0 4.5 ]
[.4875 .46294 -6 -4.5 ]
[.4875 .46294 0 4.5 ]
[.4875 .5426 -6 -4.5 ]
[.4875 .5426 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 .30363 m
.02381 .30988 L
s
[(-2)] .02381 .29113 0 1 Mshowa
.2619 .30363 m
.2619 .30988 L
s
[(-1)] .2619 .29113 0 1 Mshowa
.7381 .30363 m
.7381 .30988 L
s
[(1)] .7381 .29113 0 1 Mshowa
.97619 .30363 m
.97619 .30988 L
s
[(2)] .97619 .29113 0 1 Mshowa
.125 Mabswid
.07143 .30363 m
.07143 .30738 L
s
.11905 .30363 m
.11905 .30738 L
s
.16667 .30363 m
.16667 .30738 L
s
.21429 .30363 m
.21429 .30738 L
s
.30952 .30363 m
.30952 .30738 L
s
.35714 .30363 m
.35714 .30738 L
s
.40476 .30363 m
.40476 .30738 L
s
.45238 .30363 m
.45238 .30738 L
s
.54762 .30363 m
.54762 .30738 L
s
.59524 .30363 m
.59524 .30738 L
s
.64286 .30363 m
.64286 .30738 L
s
.69048 .30363 m
.69048 .30738 L
s
.78571 .30363 m
.78571 .30738 L
s
.83333 .30363 m
.83333 .30738 L
s
.88095 .30363 m
.88095 .30738 L
s
.92857 .30363 m
.92857 .30738 L
s
.25 Mabswid
0 .30363 m
1 .30363 L
s
.5 .06465 m
.50625 .06465 L
s
[(-3)] .4875 .06465 1 0 Mshowa
.5 .14431 m
.50625 .14431 L
s
[(-2)] .4875 .14431 1 0 Mshowa
.5 .22397 m
.50625 .22397 L
s
[(-1)] .4875 .22397 1 0 Mshowa
.5 .38329 m
.50625 .38329 L
s
[(1)] .4875 .38329 1 0 Mshowa
.5 .46294 m
.50625 .46294 L
s
[(2)] .4875 .46294 1 0 Mshowa
.5 .5426 m
.50625 .5426 L
s
[(3)] .4875 .5426 1 0 Mshowa
.125 Mabswid
.5 .08058 m
.50375 .08058 L
s
.5 .09651 m
.50375 .09651 L
s
.5 .11245 m
.50375 .11245 L
s
.5 .12838 m
.50375 .12838 L
s
.5 .16024 m
.50375 .16024 L
s
.5 .17617 m
.50375 .17617 L
s
.5 .1921 m
.50375 .1921 L
s
.5 .20804 m
.50375 .20804 L
s
.5 .2399 m
.50375 .2399 L
s
.5 .25583 m
.50375 .25583 L
s
.5 .27176 m
.50375 .27176 L
s
.5 .28769 m
.50375 .28769 L
s
.5 .31956 m
.50375 .31956 L
s
.5 .33549 m
.50375 .33549 L
s
.5 .35142 m
.50375 .35142 L
s
.5 .36735 m
.50375 .36735 L
s
.5 .39922 m
.50375 .39922 L
s
.5 .41515 m
.50375 .41515 L
s
.5 .43108 m
.50375 .43108 L
s
.5 .44701 m
.50375 .44701 L
s
.5 .47888 m
.50375 .47888 L
s
.5 .49481 m
.50375 .49481 L
s
.5 .51074 m
.50375 .51074 L
s
.5 .52667 m
.50375 .52667 L
s
.5 .04872 m
.50375 .04872 L
s
.5 .03279 m
.50375 .03279 L
s
.5 .01685 m
.50375 .01685 L
s
.5 .00092 m
.50375 .00092 L
s
.5 .55854 m
.50375 .55854 L
s
.5 .57447 m
.50375 .57447 L
s
.5 .5904 m
.50375 .5904 L
s
.5 .60633 m
.50375 .60633 L
s
.25 Mabswid
.5 0 m
.5 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .60332 m
.06244 .56019 L
.10458 .52083 L
.14415 .4901 L
.18221 .46542 L
.22272 .44369 L
.26171 .42662 L
.30316 .4121 L
.34309 .40122 L
.3815 .39336 L
.40134 .39022 L
.42237 .38756 L
.4419 .38567 L
.4602 .3844 L
.47058 .38389 L
.4757 .3837 L
.48045 .38355 L
.48473 .38345 L
.4893 .38337 L
.49192 .38333 L
.4932 .38332 L
.49438 .38331 L
.49543 .3833 L
.49658 .38329 L
.49775 .38329 L
.49897 .38329 L
.50028 .38329 L
.50148 .38329 L
.50211 .38329 L
.50281 .38329 L
.50353 .38329 L
.50421 .3833 L
.5066 .38332 L
.50795 .38333 L
.50918 .38334 L
.51371 .38342 L
.51848 .38353 L
.52366 .38368 L
.52847 .38386 L
.5394 .38438 L
.54992 .38504 L
.55985 .38582 L
.57844 .38765 L
.59846 .39019 L
.61691 .39308 L
.65631 .40108 L
.6942 .41128 L
.73454 .42516 L
.77336 .44181 L
.81464 .46357 L
Mistroke
.8544 .48908 L
.89265 .51849 L
.93334 .55591 L
.97252 .59891 L
.97619 .60332 L
Mfstroke
.02381 .01472 m
.06244 .05975 L
.10458 .10156 L
.14415 .13503 L
.18221 .1628 L
.22272 .18842 L
.26171 .20991 L
.30316 .23001 L
.34309 .24724 L
.3815 .26232 L
.42237 .27719 L
.46172 .29076 L
.49955 .30348 L
.53984 .31702 L
.57861 .33041 L
.61984 .34543 L
.65954 .36109 L
.69774 .37765 L
.73838 .39739 L
.77751 .41897 L
.81909 .44534 L
.85916 .47484 L
.89771 .50779 L
.93871 .54876 L
.97619 .59254 L
s
MathSubEnd
P
% End of sub-graphic
% Start of sub-graphic
p
0.522676 0.00700719 0.97619 0.287295 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.238095 0.309017 0.305284 [
[.02381 .29652 -6 -9 ]
[.02381 .29652 6 0 ]
[.2619 .29652 -6 -9 ]
[.2619 .29652 6 0 ]
[.7381 .29652 -3 -9 ]
[.7381 .29652 3 0 ]
[.97619 .29652 -3 -9 ]
[.97619 .29652 3 0 ]
[.4875 .00373 -12 -4.5 ]
[.4875 .00373 0 4.5 ]
[.4875 .15638 -24 -4.5 ]
[.4875 .15638 0 4.5 ]
[.4875 .46166 -18 -4.5 ]
[.4875 .46166 0 4.5 ]
[.4875 .6143 -6 -4.5 ]
[.4875 .6143 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 .30902 m
.02381 .31527 L
s
[(-2)] .02381 .29652 0 1 Mshowa
.2619 .30902 m
.2619 .31527 L
s
[(-1)] .2619 .29652 0 1 Mshowa
.7381 .30902 m
.7381 .31527 L
s
[(1)] .7381 .29652 0 1 Mshowa
.97619 .30902 m
.97619 .31527 L
s
[(2)] .97619 .29652 0 1 Mshowa
.125 Mabswid
.07143 .30902 m
.07143 .31277 L
s
.11905 .30902 m
.11905 .31277 L
s
.16667 .30902 m
.16667 .31277 L
s
.21429 .30902 m
.21429 .31277 L
s
.30952 .30902 m
.30952 .31277 L
s
.35714 .30902 m
.35714 .31277 L
s
.40476 .30902 m
.40476 .31277 L
s
.45238 .30902 m
.45238 .31277 L
s
.54762 .30902 m
.54762 .31277 L
s
.59524 .30902 m
.59524 .31277 L
s
.64286 .30902 m
.64286 .31277 L
s
.69048 .30902 m
.69048 .31277 L
s
.78571 .30902 m
.78571 .31277 L
s
.83333 .30902 m
.83333 .31277 L
s
.88095 .30902 m
.88095 .31277 L
s
.92857 .30902 m
.92857 .31277 L
s
.25 Mabswid
0 .30902 m
1 .30902 L
s
.5 .00373 m
.50625 .00373 L
s
[(-1)] .4875 .00373 1 0 Mshowa
.5 .15638 m
.50625 .15638 L
s
[(-0.5)] .4875 .15638 1 0 Mshowa
.5 .46166 m
.50625 .46166 L
s
[(0.5)] .4875 .46166 1 0 Mshowa
.5 .6143 m
.50625 .6143 L
s
[(1)] .4875 .6143 1 0 Mshowa
.125 Mabswid
.5 .03426 m
.50375 .03426 L
s
.5 .06479 m
.50375 .06479 L
s
.5 .09532 m
.50375 .09532 L
s
.5 .12585 m
.50375 .12585 L
s
.5 .1869 m
.50375 .1869 L
s
.5 .21743 m
.50375 .21743 L
s
.5 .24796 m
.50375 .24796 L
s
.5 .27849 m
.50375 .27849 L
s
.5 .33955 m
.50375 .33955 L
s
.5 .37007 m
.50375 .37007 L
s
.5 .4006 m
.50375 .4006 L
s
.5 .43113 m
.50375 .43113 L
s
.5 .49219 m
.50375 .49219 L
s
.5 .52272 m
.50375 .52272 L
s
.5 .55324 m
.50375 .55324 L
s
.5 .58377 m
.50375 .58377 L
s
.25 Mabswid
.5 0 m
.5 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .01472 m
.06244 .01882 L
.10458 .02501 L
.14415 .03299 L
.18221 .0433 L
.22272 .05791 L
.26171 .07641 L
.30316 .10181 L
.34309 .13265 L
.3815 .16849 L
.42237 .21286 L
.46172 .26035 L
.49955 .30844 L
.53984 .35963 L
.57861 .4063 L
.61984 .45089 L
.65954 .48762 L
.69774 .51684 L
.73838 .54167 L
.77751 .56022 L
.81909 .57514 L
.85916 .58581 L
.89771 .59342 L
.93871 .59936 L
.97619 .60332 L
s
MathSubEnd
P
% End of sub-graphic
% End of Graphics
MathPictureEnd
%%PSTrailer
end
grestore

%%EPS Trailer
