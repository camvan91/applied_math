%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 288 288
%%Creator: Mathematica
%%CreationDate: Tue Apr 23 21:47:59 PDT 1996
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		0 72 mul def
/Mrmarg		0 72 mul def
/Mbmarg		0 72 mul def
/Mtmarg		0 72 mul def
/Mwidth		4 72 mul def
/Mheight	4 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: .61803 
MathPictureStart
%% Graphics
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.0952381 0.103006 0.0515028 [
[(2)] .21429 .10301 0 2 Msboxa
[(4)] .40476 .10301 0 2 Msboxa
[(6)] .59524 .10301 0 2 Msboxa
[(8)] .78571 .10301 0 2 Msboxa
[(10)] .97619 .10301 0 2 Msboxa
[(-2)] .01131 0 1 0 Msboxa
[(2)] .01131 .20601 1 0 Msboxa
[(4)] .01131 .30902 1 0 Msboxa
[(6)] .01131 .41202 1 0 Msboxa
[(8)] .01131 .51503 1 0 Msboxa
[(10)] .01131 .61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.21429 .10301 m
.21429 .10926 L
s
P
[(2)] .21429 .10301 0 2 Mshowa
p
.002 w
.40476 .10301 m
.40476 .10926 L
s
P
[(4)] .40476 .10301 0 2 Mshowa
p
.002 w
.59524 .10301 m
.59524 .10926 L
s
P
[(6)] .59524 .10301 0 2 Mshowa
p
.002 w
.78571 .10301 m
.78571 .10926 L
s
P
[(8)] .78571 .10301 0 2 Mshowa
p
.002 w
.97619 .10301 m
.97619 .10926 L
s
P
[(10)] .97619 .10301 0 2 Mshowa
p
.001 w
.0619 .10301 m
.0619 .10676 L
s
P
p
.001 w
.1 .10301 m
.1 .10676 L
s
P
p
.001 w
.1381 .10301 m
.1381 .10676 L
s
P
p
.001 w
.17619 .10301 m
.17619 .10676 L
s
P
p
.001 w
.25238 .10301 m
.25238 .10676 L
s
P
p
.001 w
.29048 .10301 m
.29048 .10676 L
s
P
p
.001 w
.32857 .10301 m
.32857 .10676 L
s
P
p
.001 w
.36667 .10301 m
.36667 .10676 L
s
P
p
.001 w
.44286 .10301 m
.44286 .10676 L
s
P
p
.001 w
.48095 .10301 m
.48095 .10676 L
s
P
p
.001 w
.51905 .10301 m
.51905 .10676 L
s
P
p
.001 w
.55714 .10301 m
.55714 .10676 L
s
P
p
.001 w
.63333 .10301 m
.63333 .10676 L
s
P
p
.001 w
.67143 .10301 m
.67143 .10676 L
s
P
p
.001 w
.70952 .10301 m
.70952 .10676 L
s
P
p
.001 w
.74762 .10301 m
.74762 .10676 L
s
P
p
.001 w
.82381 .10301 m
.82381 .10676 L
s
P
p
.001 w
.8619 .10301 m
.8619 .10676 L
s
P
p
.001 w
.9 .10301 m
.9 .10676 L
s
P
p
.001 w
.9381 .10301 m
.9381 .10676 L
s
P
p
.002 w
0 .10301 m
1 .10301 L
s
P
p
.002 w
.02381 0 m
.03006 0 L
s
P
[(-2)] .01131 0 1 0 Mshowa
p
.002 w
.02381 .20601 m
.03006 .20601 L
s
P
[(2)] .01131 .20601 1 0 Mshowa
p
.002 w
.02381 .30902 m
.03006 .30902 L
s
P
[(4)] .01131 .30902 1 0 Mshowa
p
.002 w
.02381 .41202 m
.03006 .41202 L
s
P
[(6)] .01131 .41202 1 0 Mshowa
p
.002 w
.02381 .51503 m
.03006 .51503 L
s
P
[(8)] .01131 .51503 1 0 Mshowa
p
.002 w
.02381 .61803 m
.03006 .61803 L
s
P
[(10)] .01131 .61803 1 0 Mshowa
p
.001 w
.02381 .0206 m
.02756 .0206 L
s
P
p
.001 w
.02381 .0412 m
.02756 .0412 L
s
P
p
.001 w
.02381 .0618 m
.02756 .0618 L
s
P
p
.001 w
.02381 .0824 m
.02756 .0824 L
s
P
p
.001 w
.02381 .12361 m
.02756 .12361 L
s
P
p
.001 w
.02381 .14421 m
.02756 .14421 L
s
P
p
.001 w
.02381 .16481 m
.02756 .16481 L
s
P
p
.001 w
.02381 .18541 m
.02756 .18541 L
s
P
p
.001 w
.02381 .22661 m
.02756 .22661 L
s
P
p
.001 w
.02381 .24721 m
.02756 .24721 L
s
P
p
.001 w
.02381 .26781 m
.02756 .26781 L
s
P
p
.001 w
.02381 .28842 m
.02756 .28842 L
s
P
p
.001 w
.02381 .32962 m
.02756 .32962 L
s
P
p
.001 w
.02381 .35022 m
.02756 .35022 L
s
P
p
.001 w
.02381 .37082 m
.02756 .37082 L
s
P
p
.001 w
.02381 .39142 m
.02756 .39142 L
s
P
p
.001 w
.02381 .43262 m
.02756 .43262 L
s
P
p
.001 w
.02381 .45322 m
.02756 .45322 L
s
P
p
.001 w
.02381 .47383 m
.02756 .47383 L
s
P
p
.001 w
.02381 .49443 m
.02756 .49443 L
s
P
p
.001 w
.02381 .53563 m
.02756 .53563 L
s
P
p
.001 w
.02381 .55623 m
.02756 .55623 L
s
P
p
.001 w
.02381 .57683 m
.02756 .57683 L
s
P
p
.001 w
.02381 .59743 m
.02756 .59743 L
s
P
p
.002 w
.02381 0 m
.02381 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.004 w
.02381 .10301 m
.06349 .12447 L
.10317 .14592 L
.14286 .16738 L
.18254 .18884 L
.22222 .2103 L
.2619 .23176 L
.30159 .25322 L
.34127 .27468 L
.38095 .29614 L
.42063 .3176 L
.46032 .33906 L
.5 .36052 L
.53968 .38198 L
.57937 .40344 L
.61905 .4249 L
.65873 .44636 L
.69841 .46782 L
.7381 .48928 L
.77778 .51074 L
.81746 .5322 L
.85714 .55366 L
.89683 .57511 L
.93651 .59657 L
.97619 .61803 L
s
P
P
p
p
.004 w
s
s
s
s
s
s
s
.03334 .61803 m
.03373 .59564 L
s
.03373 .59564 m
.03497 .54048 L
.03621 .49631 L
.03869 .42994 L
.04117 .3824 L
.04365 .34663 L
.04613 .31871 L
.04861 .29629 L
.05357 .26241 L
.05853 .23796 L
.06349 .21938 L
.06845 .20471 L
.07341 .19278 L
.08333 .17439 L
.09325 .16065 L
.10317 .14979 L
.12302 .13312 L
.14286 .12012 L
.18254 .09805 L
.20238 .08684 L
.22222 .07403 L
.23214 .06649 L
.24206 .05775 L
.25198 .04725 L
.2619 .03406 L
.26687 .026 L
.27183 .01658 L
s
.27843 0 m
.27183 .01658 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
.32356 0 m
.3236 .61803 L
s
s
.3236 .61803 m
.32356 0 L
s
s
s
s
s
s
s
.33251 .61803 m
.33259 .61326 L
s
.33259 .61326 m
.33383 .55436 L
.33507 .50753 L
.33631 .46938 L
.33879 .41098 L
.34127 .36831 L
.34375 .33574 L
.34623 .31003 L
.35119 .27195 L
.35615 .24498 L
.36111 .2248 L
.36607 .20904 L
.37103 .19634 L
.38095 .17695 L
.39087 .16261 L
.40079 .15138 L
.42063 .13428 L
.46032 .10969 L
.5 .08777 L
.51984 .07514 L
.52976 .06776 L
.53968 .05925 L
.5496 .04907 L
.55952 .0364 L
.56944 .01976 L
.5744 .00916 L
s
.57795 0 m
.5744 .00916 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
.62208 0 m
.62213 .61803 L
s
s
.62213 .61803 m
.62208 0 L
s
s
s
s
s
s
s
s
.63173 .61803 m
.63269 .56914 L
s
.63269 .56914 m
.63393 .51939 L
.63641 .44585 L
.63889 .39405 L
.64137 .35553 L
.64385 .32574 L
.64633 .30199 L
.64881 .28258 L
.65377 .25269 L
.65873 .23066 L
.66369 .21368 L
.66865 .20011 L
.67857 .17963 L
.68849 .16465 L
.69841 .15301 L
.71825 .13546 L
.7381 .12204 L
.77778 .09977 L
.79762 .0887 L
.81746 .07624 L
.8373 .0607 L
.84722 .05083 L
.85714 .03863 L
.86706 .02276 L
.87202 .01275 L
.87698 .00072 L
s
.87722 0 m
.87698 .00072 L
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
.9206 0 m
.92063 .61803 L
s
s
.92063 .61803 m
.9206 0 L
s
s
s
s
s
s
s
s
.93094 .61803 m
.93155 .5849 L
s
.93155 .5849 m
.93279 .53196 L
.93403 .48939 L
.93651 .4251 L
.93899 .37883 L
.94147 .34389 L
.94643 .29451 L
.94891 .27638 L
.95139 .26117 L
.95635 .23703 L
.96131 .21865 L
.96627 .20413 L
.97619 .18244 L
s
P
P
P
% End of Graphics
MathPictureEnd
end
