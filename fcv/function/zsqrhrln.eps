%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 417 189
%%HiResBoundingBox: 0 0 417.312 189.25
%%Creator: (Mathematica X 3.0)
%%Title: Clipboard
%%CreationDate: (Sometime) (Sometime)
%%DocumentNeededResources: (atend)
%%DocumentFonts: (atend)
%%DocumentNeededFonts: (atend)
%%EndComments
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def
/Mnodistort true def
/colorimage where
{ pop /Mcolorimage {colorimage} bind def /Mimage {image} bind def}
{
/colorimage {Mcolorimage} bind def
} ifelse
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		417.312500 def
/Mheight	189.250000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .45351 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.010798 0.47619 [
[ 0 0 0 0 ]
[ 1 .45351 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .45351 L
0 .45351 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0238095 0.010798 0.477324 0.442717 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.15873 0.476191 0.15873 [
[.02381 .46369 -6 -9 ]
[.02381 .46369 6 0 ]
[.18254 .46369 -6 -9 ]
[.18254 .46369 6 0 ]
[.34127 .46369 -6 -9 ]
[.34127 .46369 6 0 ]
[.65873 .46369 -3 -9 ]
[.65873 .46369 3 0 ]
[.81746 .46369 -3 -9 ]
[.81746 .46369 3 0 ]
[.97619 .46369 -3 -9 ]
[.97619 .46369 3 0 ]
[.4875 0 -12 -4.5 ]
[.4875 0 0 4.5 ]
[.4875 .15873 -12 -4.5 ]
[.4875 .15873 0 4.5 ]
[.4875 .31746 -12 -4.5 ]
[.4875 .31746 0 4.5 ]
[.4875 .63492 -6 -4.5 ]
[.4875 .63492 0 4.5 ]
[.4875 .79365 -6 -4.5 ]
[.4875 .79365 0 4.5 ]
[.4875 .95238 -6 -4.5 ]
[.4875 .95238 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .95238 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 .47619 m
.02381 .48244 L
s
[(-3)] .02381 .46369 0 1 Mshowa
.18254 .47619 m
.18254 .48244 L
s
[(-2)] .18254 .46369 0 1 Mshowa
.34127 .47619 m
.34127 .48244 L
s
[(-1)] .34127 .46369 0 1 Mshowa
.65873 .47619 m
.65873 .48244 L
s
[(1)] .65873 .46369 0 1 Mshowa
.81746 .47619 m
.81746 .48244 L
s
[(2)] .81746 .46369 0 1 Mshowa
.97619 .47619 m
.97619 .48244 L
s
[(3)] .97619 .46369 0 1 Mshowa
.125 Mabswid
.05556 .47619 m
.05556 .47994 L
s
.0873 .47619 m
.0873 .47994 L
s
.11905 .47619 m
.11905 .47994 L
s
.15079 .47619 m
.15079 .47994 L
s
.21429 .47619 m
.21429 .47994 L
s
.24603 .47619 m
.24603 .47994 L
s
.27778 .47619 m
.27778 .47994 L
s
.30952 .47619 m
.30952 .47994 L
s
.37302 .47619 m
.37302 .47994 L
s
.40476 .47619 m
.40476 .47994 L
s
.43651 .47619 m
.43651 .47994 L
s
.46825 .47619 m
.46825 .47994 L
s
.53175 .47619 m
.53175 .47994 L
s
.56349 .47619 m
.56349 .47994 L
s
.59524 .47619 m
.59524 .47994 L
s
.62698 .47619 m
.62698 .47994 L
s
.69048 .47619 m
.69048 .47994 L
s
.72222 .47619 m
.72222 .47994 L
s
.75397 .47619 m
.75397 .47994 L
s
.78571 .47619 m
.78571 .47994 L
s
.84921 .47619 m
.84921 .47994 L
s
.88095 .47619 m
.88095 .47994 L
s
.9127 .47619 m
.9127 .47994 L
s
.94444 .47619 m
.94444 .47994 L
s
.25 Mabswid
0 .47619 m
1 .47619 L
s
.5 0 m
.50625 0 L
s
[(-3)] .4875 0 1 0 Mshowa
.5 .15873 m
.50625 .15873 L
s
[(-2)] .4875 .15873 1 0 Mshowa
.5 .31746 m
.50625 .31746 L
s
[(-1)] .4875 .31746 1 0 Mshowa
.5 .63492 m
.50625 .63492 L
s
[(1)] .4875 .63492 1 0 Mshowa
.5 .79365 m
.50625 .79365 L
s
[(2)] .4875 .79365 1 0 Mshowa
.5 .95238 m
.50625 .95238 L
s
[(3)] .4875 .95238 1 0 Mshowa
.125 Mabswid
.5 .03175 m
.50375 .03175 L
s
.5 .06349 m
.50375 .06349 L
s
.5 .09524 m
.50375 .09524 L
s
.5 .12698 m
.50375 .12698 L
s
.5 .19048 m
.50375 .19048 L
s
.5 .22222 m
.50375 .22222 L
s
.5 .25397 m
.50375 .25397 L
s
.5 .28571 m
.50375 .28571 L
s
.5 .34921 m
.50375 .34921 L
s
.5 .38095 m
.50375 .38095 L
s
.5 .4127 m
.50375 .4127 L
s
.5 .44444 m
.50375 .44444 L
s
.5 .50794 m
.50375 .50794 L
s
.5 .53968 m
.50375 .53968 L
s
.5 .57143 m
.50375 .57143 L
s
.5 .60317 m
.50375 .60317 L
s
.5 .66667 m
.50375 .66667 L
s
.5 .69841 m
.50375 .69841 L
s
.5 .73016 m
.50375 .73016 L
s
.5 .7619 m
.50375 .7619 L
s
.5 .8254 m
.50375 .8254 L
s
.5 .85714 m
.50375 .85714 L
s
.5 .88889 m
.50375 .88889 L
s
.5 .92063 m
.50375 .92063 L
s
.25 Mabswid
.5 0 m
.5 .95238 L
s
0 0 m
1 0 L
1 .95238 L
0 .95238 L
closepath
clip
newpath
.01 w
.02381 .47619 m
.06244 .47619 L
.10458 .47619 L
.14415 .47619 L
.18221 .47619 L
.22272 .47619 L
.26171 .47619 L
.30316 .47619 L
.34309 .47619 L
.3815 .47619 L
.42237 .47619 L
.46172 .47619 L
.49955 .47619 L
.53984 .47619 L
.57861 .47619 L
.61984 .47619 L
.65954 .47619 L
.69774 .47619 L
.73838 .47619 L
.77751 .47619 L
.81909 .47619 L
.85916 .47619 L
.89771 .47619 L
.93871 .47619 L
.97619 .47619 L
s
.02381 .63492 m
.06244 .63492 L
.10458 .63492 L
.14415 .63492 L
.18221 .63492 L
.22272 .63492 L
.26171 .63492 L
.30316 .63492 L
.34309 .63492 L
.3815 .63492 L
.42237 .63492 L
.46172 .63492 L
.49955 .63492 L
.53984 .63492 L
.57861 .63492 L
.61984 .63492 L
.65954 .63492 L
.69774 .63492 L
.73838 .63492 L
.77751 .63492 L
.81909 .63492 L
.85916 .63492 L
.89771 .63492 L
.93871 .63492 L
.97619 .63492 L
s
.02381 .79365 m
.06244 .79365 L
.10458 .79365 L
.14415 .79365 L
.18221 .79365 L
.22272 .79365 L
.26171 .79365 L
.30316 .79365 L
.34309 .79365 L
.3815 .79365 L
.42237 .79365 L
.46172 .79365 L
.49955 .79365 L
.53984 .79365 L
.57861 .79365 L
.61984 .79365 L
.65954 .79365 L
.69774 .79365 L
.73838 .79365 L
.77751 .79365 L
.81909 .79365 L
.85916 .79365 L
.89771 .79365 L
.93871 .79365 L
.97619 .79365 L
s
.02381 .95238 m
.06244 .95238 L
.10458 .95238 L
.14415 .95238 L
.18221 .95238 L
.22272 .95238 L
.26171 .95238 L
.30316 .95238 L
.34309 .95238 L
.3815 .95238 L
.42237 .95238 L
.46172 .95238 L
.49955 .95238 L
.53984 .95238 L
.57861 .95238 L
.61984 .95238 L
.65954 .95238 L
.69774 .95238 L
.73838 .95238 L
.77751 .95238 L
.81909 .95238 L
.85916 .95238 L
.89771 .95238 L
.93871 .95238 L
.97619 .95238 L
s
MathSubEnd
P
% End of sub-graphic
% Start of sub-graphic
p
0.522676 0.010798 0.97619 0.442717 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.0416667 0.5 0.0416667 [
[.08333 .4875 -9 -9 ]
[.08333 .4875 9 0 ]
[.29167 .4875 -6 -9 ]
[.29167 .4875 6 0 ]
[.70833 .4875 -3 -9 ]
[.70833 .4875 3 0 ]
[.91667 .4875 -6 -9 ]
[.91667 .4875 6 0 ]
[.4875 .08333 -18 -4.5 ]
[.4875 .08333 0 4.5 ]
[.4875 .29167 -12 -4.5 ]
[.4875 .29167 0 4.5 ]
[.4875 .70833 -6 -4.5 ]
[.4875 .70833 0 4.5 ]
[.4875 .91667 -12 -4.5 ]
[.4875 .91667 0 4.5 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.08333 .5 m
.08333 .50625 L
s
[(-10)] .08333 .4875 0 1 Mshowa
.29167 .5 m
.29167 .50625 L
s
[(-5)] .29167 .4875 0 1 Mshowa
.70833 .5 m
.70833 .50625 L
s
[(5)] .70833 .4875 0 1 Mshowa
.91667 .5 m
.91667 .50625 L
s
[(10)] .91667 .4875 0 1 Mshowa
.125 Mabswid
.125 .5 m
.125 .50375 L
s
.16667 .5 m
.16667 .50375 L
s
.20833 .5 m
.20833 .50375 L
s
.25 .5 m
.25 .50375 L
s
.33333 .5 m
.33333 .50375 L
s
.375 .5 m
.375 .50375 L
s
.41667 .5 m
.41667 .50375 L
s
.45833 .5 m
.45833 .50375 L
s
.54167 .5 m
.54167 .50375 L
s
.58333 .5 m
.58333 .50375 L
s
.625 .5 m
.625 .50375 L
s
.66667 .5 m
.66667 .50375 L
s
.75 .5 m
.75 .50375 L
s
.79167 .5 m
.79167 .50375 L
s
.83333 .5 m
.83333 .50375 L
s
.875 .5 m
.875 .50375 L
s
.04167 .5 m
.04167 .50375 L
s
.95833 .5 m
.95833 .50375 L
s
.25 Mabswid
0 .5 m
1 .5 L
s
.5 .08333 m
.50625 .08333 L
s
[(-10)] .4875 .08333 1 0 Mshowa
.5 .29167 m
.50625 .29167 L
s
[(-5)] .4875 .29167 1 0 Mshowa
.5 .70833 m
.50625 .70833 L
s
[(5)] .4875 .70833 1 0 Mshowa
.5 .91667 m
.50625 .91667 L
s
[(10)] .4875 .91667 1 0 Mshowa
.125 Mabswid
.5 .125 m
.50375 .125 L
s
.5 .16667 m
.50375 .16667 L
s
.5 .20833 m
.50375 .20833 L
s
.5 .25 m
.50375 .25 L
s
.5 .33333 m
.50375 .33333 L
s
.5 .375 m
.50375 .375 L
s
.5 .41667 m
.50375 .41667 L
s
.5 .45833 m
.50375 .45833 L
s
.5 .54167 m
.50375 .54167 L
s
.5 .58333 m
.50375 .58333 L
s
.5 .625 m
.50375 .625 L
s
.5 .66667 m
.50375 .66667 L
s
.5 .75 m
.50375 .75 L
s
.5 .79167 m
.50375 .79167 L
s
.5 .83333 m
.50375 .83333 L
s
.5 .875 m
.50375 .875 L
s
.5 .04167 m
.50375 .04167 L
s
.5 .95833 m
.50375 .95833 L
s
.25 Mabswid
.5 0 m
.5 1 L
s
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
.01 w
1 .5 m
.96393 .5 L
.8532 .5 L
.76084 .5 L
.678 .5 L
.61311 .5 L
.56451 .5 L
.52769 .5 L
.50673 .5 L
.5 .5 L
.50729 .5 L
.52839 .5 L
.56597 .5 L
.61693 .5 L
.67962 .5 L
.76105 .5 L
.85378 .5 L
.96774 .5 L
s
.96774 .5 m
1 .5 L
s
1 .19995 m
.92226 .22193 L
.81153 .25738 L
.71918 .2915 L
.63633 .32776 L
.57144 .3627 L
.52284 .39631 L
.50341 .41333 L
.48602 .43207 L
.47342 .44985 L
.46901 .45781 L
.46507 .4665 L
.46331 .47121 L
.46191 .47558 L
.46071 .48011 L
.45983 .48422 L
.45916 .48826 L
.45892 .49011 L
.45871 .49206 L
.45854 .49416 L
.45848 .49509 L
.45843 .49608 L
.45838 .49715 L
.45835 .49815 L
.45834 .49876 L
.45834 .49934 L
.45833 .50043 L
.45835 .50142 L
.45837 .5025 L
.45841 .50351 L
.45845 .50444 L
.45859 .5066 L
.45881 .50887 L
.45907 .51109 L
.45937 .51316 L
.46024 .51785 L
.46228 .52564 L
.46526 .53397 L
.46939 .54293 L
.47496 .55264 L
.48797 .57028 L
.50445 .58767 L
.52585 .60608 L
.57465 .63923 L
.6411 .67453 L
.71917 .7085 L
.81736 .74462 L
.92675 .77941 L
s
.92675 .77941 m
1 .80002 L
s
.70958 0 m
.68653 .01475 L
.59418 .08299 L
.51133 .15552 L
.44644 .2254 L
.39784 .29262 L
.37841 .32666 L
.36102 .36414 L
.34842 .3997 L
.34401 .41562 L
.34007 .433 L
.33831 .44242 L
.33691 .45117 L
.33571 .46023 L
.33483 .46844 L
.33416 .47652 L
.33392 .48022 L
.33371 .48413 L
.33354 .48831 L
.33348 .49017 L
.33343 .49216 L
.33338 .49431 L
.33335 .49631 L
.33334 .49753 L
.33334 .49869 L
.33333 .50085 L
.33335 .50285 L
.33337 .505 L
.33341 .50702 L
.33345 .50888 L
.33359 .5132 L
.33381 .51775 L
.33407 .52219 L
.33437 .52632 L
.33524 .5357 L
.33728 .55128 L
.34026 .56793 L
.34439 .58586 L
.34996 .60529 L
.36297 .64055 L
.37945 .67534 L
.40085 .71216 L
.44965 .77846 L
.5161 .84906 L
.59417 .917 L
.69236 .98923 L
s
.69236 .98923 m
.70928 1 L
s
.29265 0 m
.23811 .0881 L
.18951 .18894 L
.17007 .23998 L
.15269 .29621 L
.14009 .34954 L
.13568 .37343 L
.13173 .39951 L
.12997 .41364 L
.12858 .42675 L
.12737 .44034 L
.12649 .45265 L
.12583 .46477 L
.12559 .47033 L
.12538 .47619 L
.1252 .48247 L
.12514 .48526 L
.12509 .48824 L
.12505 .49146 L
.12502 .49446 L
.12501 .49629 L
.125 .49803 L
.125 .50128 L
.12501 .50427 L
.12504 .50749 L
.12507 .51054 L
.12512 .51333 L
.12526 .5198 L
.12547 .52662 L
.12574 .53328 L
.12604 .53948 L
.12691 .55354 L
.12894 .57692 L
.13192 .6019 L
.13606 .62878 L
.14163 .65793 L
.15463 .71083 L
.17111 .763 L
.19252 .81824 L
.24131 .91769 L
s
.24131 .91769 m
.29296 1 L
s
MathSubEnd
P
% End of sub-graphic
% End of Graphics
MathPictureEnd
%%PSTrailer
end
grestore

%%EPS Trailer
