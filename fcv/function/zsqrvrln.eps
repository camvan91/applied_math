%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 302 143
%%HiResBoundingBox: 0 0 302.375 143.938
%%Creator: (Mathematica X 3.0)
%%Title: Clipboard
%%CreationDate: (Sometime) (Sometime)
%%DocumentNeededResources: (atend)
%%DocumentFonts: (atend)
%%DocumentNeededFonts: (atend)
%%EndComments
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def
/Mnodistort true def
/colorimage where
{ pop /Mcolorimage {colorimage} bind def /Mimage {image} bind def}
{
/colorimage {Mcolorimage} bind def
} ifelse
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		302.375000 def
/Mheight	143.937500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .47619 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.0113379 0.47619 [
[ 0 0 0 0 ]
[ 1 .47619 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .47619 L
0 .47619 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0238095 0.0113379 0.477324 0.464853 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.166667 0.5 0.166667 [
[0 .4875 -6 -9 ]
[0 .4875 6 0 ]
[.16667 .4875 -6 -9 ]
[.16667 .4875 6 0 ]
[.33333 .4875 -6 -9 ]
[.33333 .4875 6 0 ]
[.66667 .4875 -3 -9 ]
[.66667 .4875 3 0 ]
[.83333 .4875 -3 -9 ]
[.83333 .4875 3 0 ]
[1 .4875 -3 -9 ]
[1 .4875 3 0 ]
[.4875 0 -12 -4.5 ]
[.4875 0 0 4.5 ]
[.4875 .16667 -12 -4.5 ]
[.4875 .16667 0 4.5 ]
[.4875 .33333 -12 -4.5 ]
[.4875 .33333 0 4.5 ]
[.4875 .66667 -6 -4.5 ]
[.4875 .66667 0 4.5 ]
[.4875 .83333 -6 -4.5 ]
[.4875 .83333 0 4.5 ]
[.4875 1 -6 -4.5 ]
[.4875 1 0 4.5 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
0 .5 m
0 .50625 L
s
[(-3)] 0 .4875 0 1 Mshowa
.16667 .5 m
.16667 .50625 L
s
[(-2)] .16667 .4875 0 1 Mshowa
.33333 .5 m
.33333 .50625 L
s
[(-1)] .33333 .4875 0 1 Mshowa
.66667 .5 m
.66667 .50625 L
s
[(1)] .66667 .4875 0 1 Mshowa
.83333 .5 m
.83333 .50625 L
s
[(2)] .83333 .4875 0 1 Mshowa
1 .5 m
1 .50625 L
s
[(3)] 1 .4875 0 1 Mshowa
.125 Mabswid
.03333 .5 m
.03333 .50375 L
s
.06667 .5 m
.06667 .50375 L
s
.1 .5 m
.1 .50375 L
s
.13333 .5 m
.13333 .50375 L
s
.2 .5 m
.2 .50375 L
s
.23333 .5 m
.23333 .50375 L
s
.26667 .5 m
.26667 .50375 L
s
.3 .5 m
.3 .50375 L
s
.36667 .5 m
.36667 .50375 L
s
.4 .5 m
.4 .50375 L
s
.43333 .5 m
.43333 .50375 L
s
.46667 .5 m
.46667 .50375 L
s
.53333 .5 m
.53333 .50375 L
s
.56667 .5 m
.56667 .50375 L
s
.6 .5 m
.6 .50375 L
s
.63333 .5 m
.63333 .50375 L
s
.7 .5 m
.7 .50375 L
s
.73333 .5 m
.73333 .50375 L
s
.76667 .5 m
.76667 .50375 L
s
.8 .5 m
.8 .50375 L
s
.86667 .5 m
.86667 .50375 L
s
.9 .5 m
.9 .50375 L
s
.93333 .5 m
.93333 .50375 L
s
.96667 .5 m
.96667 .50375 L
s
.25 Mabswid
0 .5 m
1 .5 L
s
.5 0 m
.50625 0 L
s
[(-3)] .4875 0 1 0 Mshowa
.5 .16667 m
.50625 .16667 L
s
[(-2)] .4875 .16667 1 0 Mshowa
.5 .33333 m
.50625 .33333 L
s
[(-1)] .4875 .33333 1 0 Mshowa
.5 .66667 m
.50625 .66667 L
s
[(1)] .4875 .66667 1 0 Mshowa
.5 .83333 m
.50625 .83333 L
s
[(2)] .4875 .83333 1 0 Mshowa
.5 1 m
.50625 1 L
s
[(3)] .4875 1 1 0 Mshowa
.125 Mabswid
.5 .03333 m
.50375 .03333 L
s
.5 .06667 m
.50375 .06667 L
s
.5 .1 m
.50375 .1 L
s
.5 .13333 m
.50375 .13333 L
s
.5 .2 m
.50375 .2 L
s
.5 .23333 m
.50375 .23333 L
s
.5 .26667 m
.50375 .26667 L
s
.5 .3 m
.50375 .3 L
s
.5 .36667 m
.50375 .36667 L
s
.5 .4 m
.50375 .4 L
s
.5 .43333 m
.50375 .43333 L
s
.5 .46667 m
.50375 .46667 L
s
.5 .53333 m
.50375 .53333 L
s
.5 .56667 m
.50375 .56667 L
s
.5 .6 m
.50375 .6 L
s
.5 .63333 m
.50375 .63333 L
s
.5 .7 m
.50375 .7 L
s
.5 .73333 m
.50375 .73333 L
s
.5 .76667 m
.50375 .76667 L
s
.5 .8 m
.50375 .8 L
s
.5 .86667 m
.50375 .86667 L
s
.5 .9 m
.50375 .9 L
s
.5 .93333 m
.50375 .93333 L
s
.5 .96667 m
.50375 .96667 L
s
.25 Mabswid
.5 0 m
.5 1 L
s
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
.01 w
.5 0 m
.5 .04057 L
.5 .08481 L
.5 .12636 L
.5 .16632 L
.5 .20885 L
.5 .2498 L
.5 .29331 L
.5 .33524 L
.5 .37557 L
.5 .41848 L
.5 .4598 L
.5 .49953 L
.5 .54183 L
.5 .58254 L
.5 .62583 L
.5 .66752 L
.5 .70762 L
.5 .7503 L
.5 .79139 L
.5 .83505 L
.5 .87712 L
.5 .9176 L
.5 .96065 L
.5 1 L
s
.66667 0 m
.66667 .04057 L
.66667 .08481 L
.66667 .12636 L
.66667 .16632 L
.66667 .20885 L
.66667 .2498 L
.66667 .29331 L
.66667 .33524 L
.66667 .37557 L
.66667 .41848 L
.66667 .4598 L
.66667 .49953 L
.66667 .54183 L
.66667 .58254 L
.66667 .62583 L
.66667 .66752 L
.66667 .70762 L
.66667 .7503 L
.66667 .79139 L
.66667 .83505 L
.66667 .87712 L
.66667 .9176 L
.66667 .96065 L
.66667 1 L
s
.83333 0 m
.83333 .04057 L
.83333 .08481 L
.83333 .12636 L
.83333 .16632 L
.83333 .20885 L
.83333 .2498 L
.83333 .29331 L
.83333 .33524 L
.83333 .37557 L
.83333 .41848 L
.83333 .4598 L
.83333 .49953 L
.83333 .54183 L
.83333 .58254 L
.83333 .62583 L
.83333 .66752 L
.83333 .70762 L
.83333 .7503 L
.83333 .79139 L
.83333 .83505 L
.83333 .87712 L
.83333 .9176 L
.83333 .96065 L
.83333 1 L
s
1 0 m
1 .04057 L
1 .08481 L
1 .12636 L
1 .16632 L
1 .20885 L
1 .2498 L
1 .29331 L
1 .33524 L
1 .37557 L
1 .41848 L
1 .4598 L
1 .49953 L
1 .54183 L
1 .58254 L
1 .62583 L
1 .66752 L
1 .70762 L
1 .7503 L
1 .79139 L
1 .83505 L
1 .87712 L
1 .9176 L
1 .96065 L
1 1 L
s
MathSubEnd
P
% End of sub-graphic
% Start of sub-graphic
p
0.522676 0.0113379 0.97619 0.464853 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.0416667 0.5 0.0416667 [
[.08333 .4875 -9 -9 ]
[.08333 .4875 9 0 ]
[.29167 .4875 -6 -9 ]
[.29167 .4875 6 0 ]
[.70833 .4875 -3 -9 ]
[.70833 .4875 3 0 ]
[.91667 .4875 -6 -9 ]
[.91667 .4875 6 0 ]
[.4875 .08333 -18 -4.5 ]
[.4875 .08333 0 4.5 ]
[.4875 .29167 -12 -4.5 ]
[.4875 .29167 0 4.5 ]
[.4875 .70833 -6 -4.5 ]
[.4875 .70833 0 4.5 ]
[.4875 .91667 -12 -4.5 ]
[.4875 .91667 0 4.5 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.08333 .5 m
.08333 .50625 L
s
[(-10)] .08333 .4875 0 1 Mshowa
.29167 .5 m
.29167 .50625 L
s
[(-5)] .29167 .4875 0 1 Mshowa
.70833 .5 m
.70833 .50625 L
s
[(5)] .70833 .4875 0 1 Mshowa
.91667 .5 m
.91667 .50625 L
s
[(10)] .91667 .4875 0 1 Mshowa
.125 Mabswid
.125 .5 m
.125 .50375 L
s
.16667 .5 m
.16667 .50375 L
s
.20833 .5 m
.20833 .50375 L
s
.25 .5 m
.25 .50375 L
s
.33333 .5 m
.33333 .50375 L
s
.375 .5 m
.375 .50375 L
s
.41667 .5 m
.41667 .50375 L
s
.45833 .5 m
.45833 .50375 L
s
.54167 .5 m
.54167 .50375 L
s
.58333 .5 m
.58333 .50375 L
s
.625 .5 m
.625 .50375 L
s
.66667 .5 m
.66667 .50375 L
s
.75 .5 m
.75 .50375 L
s
.79167 .5 m
.79167 .50375 L
s
.83333 .5 m
.83333 .50375 L
s
.875 .5 m
.875 .50375 L
s
.04167 .5 m
.04167 .50375 L
s
.95833 .5 m
.95833 .50375 L
s
.25 Mabswid
0 .5 m
1 .5 L
s
.5 .08333 m
.50625 .08333 L
s
[(-10)] .4875 .08333 1 0 Mshowa
.5 .29167 m
.50625 .29167 L
s
[(-5)] .4875 .29167 1 0 Mshowa
.5 .70833 m
.50625 .70833 L
s
[(5)] .4875 .70833 1 0 Mshowa
.5 .91667 m
.50625 .91667 L
s
[(10)] .4875 .91667 1 0 Mshowa
.125 Mabswid
.5 .125 m
.50375 .125 L
s
.5 .16667 m
.50375 .16667 L
s
.5 .20833 m
.50375 .20833 L
s
.5 .25 m
.50375 .25 L
s
.5 .33333 m
.50375 .33333 L
s
.5 .375 m
.50375 .375 L
s
.5 .41667 m
.50375 .41667 L
s
.5 .45833 m
.50375 .45833 L
s
.5 .54167 m
.50375 .54167 L
s
.5 .58333 m
.50375 .58333 L
s
.5 .625 m
.50375 .625 L
s
.5 .66667 m
.50375 .66667 L
s
.5 .75 m
.50375 .75 L
s
.5 .79167 m
.50375 .79167 L
s
.5 .83333 m
.50375 .83333 L
s
.5 .875 m
.50375 .875 L
s
.5 .04167 m
.50375 .04167 L
s
.5 .95833 m
.50375 .95833 L
s
.25 Mabswid
.5 0 m
.5 1 L
s
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
.01 w
0 .5 m
.03607 .5 L
.1468 .5 L
.23916 .5 L
.322 .5 L
.38689 .5 L
.43549 .5 L
.47231 .5 L
.49327 .5 L
.5 .5 L
.49271 .5 L
.47161 .5 L
.43403 .5 L
.38307 .5 L
.32038 .5 L
.23895 .5 L
.14622 .5 L
.03226 .5 L
s
.03226 .5 m
0 .5 L
s
0 .19995 m
.07774 .22193 L
.18847 .25738 L
.28082 .2915 L
.36367 .32776 L
.42856 .3627 L
.47716 .39631 L
.49659 .41333 L
.51398 .43207 L
.52658 .44985 L
.53099 .45781 L
.53493 .4665 L
.53669 .47121 L
.53809 .47558 L
.53929 .48011 L
.54017 .48422 L
.54084 .48826 L
.54108 .49011 L
.54129 .49206 L
.54146 .49416 L
.54152 .49509 L
.54157 .49608 L
.54162 .49715 L
.54165 .49815 L
.54166 .49876 L
.54166 .49934 L
.54167 .50043 L
.54165 .50142 L
.54163 .5025 L
.54159 .50351 L
.54155 .50444 L
.54141 .5066 L
.54119 .50887 L
.54093 .51109 L
.54063 .51316 L
.53976 .51785 L
.53772 .52564 L
.53474 .53397 L
.53061 .54293 L
.52504 .55264 L
.51203 .57028 L
.49555 .58767 L
.47415 .60608 L
.42535 .63923 L
.3589 .67453 L
.28083 .7085 L
.18264 .74462 L
.07325 .77941 L
s
.07325 .77941 m
0 .80002 L
s
.29042 0 m
.31347 .01475 L
.40582 .08299 L
.48867 .15552 L
.55356 .2254 L
.60216 .29262 L
.62159 .32666 L
.63898 .36414 L
.65158 .3997 L
.65599 .41562 L
.65993 .433 L
.66169 .44242 L
.66309 .45117 L
.66429 .46023 L
.66517 .46844 L
.66584 .47652 L
.66608 .48022 L
.66629 .48413 L
.66646 .48831 L
.66652 .49017 L
.66657 .49216 L
.66662 .49431 L
.66665 .49631 L
.66666 .49753 L
.66666 .49869 L
.66667 .50085 L
.66665 .50285 L
.66663 .505 L
.66659 .50702 L
.66655 .50888 L
.66641 .5132 L
.66619 .51775 L
.66593 .52219 L
.66563 .52632 L
.66476 .5357 L
.66272 .55128 L
.65974 .56793 L
.65561 .58586 L
.65004 .60529 L
.63703 .64055 L
.62055 .67534 L
.59915 .71216 L
.55035 .77846 L
.4839 .84906 L
.40583 .917 L
.30764 .98923 L
s
.30764 .98923 m
.29072 1 L
s
.70735 0 m
.76189 .0881 L
.81049 .18894 L
.82993 .23998 L
.84731 .29621 L
.85991 .34954 L
.86432 .37343 L
.86827 .39951 L
.87003 .41364 L
.87142 .42675 L
.87263 .44034 L
.87351 .45265 L
.87417 .46477 L
.87441 .47033 L
.87462 .47619 L
.8748 .48247 L
.87486 .48526 L
.87491 .48824 L
.87495 .49146 L
.87498 .49446 L
.87499 .49629 L
.875 .49803 L
.875 .50128 L
.87499 .50427 L
.87496 .50749 L
.87493 .51054 L
.87488 .51333 L
.87474 .5198 L
.87453 .52662 L
.87426 .53328 L
.87396 .53948 L
.87309 .55354 L
.87106 .57692 L
.86808 .6019 L
.86394 .62878 L
.85837 .65793 L
.84537 .71083 L
.82889 .763 L
.80748 .81824 L
.75869 .91769 L
s
.75869 .91769 m
.70704 1 L
s
MathSubEnd
P
% End of sub-graphic
% End of Graphics
MathPictureEnd
%%PSTrailer
end
grestore

%%EPS Trailer
