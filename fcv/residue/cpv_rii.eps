%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 288 84
%%HiResBoundingBox: 0 0 288 84.75
%%Creator: (Mathematica X 3.0)
%%Title: Clipboard
%%CreationDate: (Sometime) (Sometime)
%%DocumentNeededResources: (atend)
%%DocumentFonts: (atend)
%%DocumentNeededFonts: (atend)
%%EndComments
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def
/Mnodistort true def
/colorimage where
{ pop /Mcolorimage {colorimage} bind def /Mimage {image} bind def}
{
/colorimage {Mcolorimage} bind def
} ifelse
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		288.000000 def
/Mheight	84.750000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .2943 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.00700719 0.47619 [
[ 0 0 0 0 ]
[ 1 .2943 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .2943 L
0 .2943 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0238095 0.00700719 0.477324 0.287295 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.476191 0.308991 0.0208136 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
0 .30899 m
1 .30899 L
s
.5 0 m
.5 .61803 L
s
.5 Mabswid
.02381 .28972 m
.06244 .2883 L
.10458 .28653 L
.14415 .28463 L
.18221 .28255 L
.22272 .28007 L
.26171 .27747 L
.30316 .2747 L
.32392 .27348 L
.33304 .27303 L
.34309 .27262 L
.34772 .27247 L
.35271 .27234 L
.35513 .2723 L
.35742 .27226 L
.35948 .27223 L
.36065 .27222 L
.36173 .27221 L
.36297 .2722 L
.36367 .2722 L
.36432 .2722 L
.3655 .2722 L
.36675 .2722 L
.36787 .2722 L
.36892 .27221 L
.37007 .27222 L
.3713 .27224 L
.37404 .27228 L
.37663 .27234 L
.37896 .27241 L
.3815 .2725 L
.38635 .27272 L
.3909 .273 L
.39589 .27338 L
.40127 .2739 L
.41223 .27533 L
.42228 .27714 L
.43208 .27941 L
.44121 .28201 L
.46191 .28972 L
.50095 .30951 L
.52086 .32012 L
.54245 .33009 L
.55255 .33391 L
.56325 .3373 L
.57327 .33988 L
.58243 .34176 L
.59187 .34325 L
.59672 .34386 L
.602 .34441 L
Mistroke
.60688 .34482 L
.6114 .34513 L
.61572 .34536 L
.62032 .34555 L
.62293 .34563 L
.62569 .3457 L
.62805 .34574 L
.62938 .34575 L
.63063 .34577 L
.63132 .34577 L
.63208 .34578 L
.63279 .34578 L
.63345 .34578 L
.63469 .34578 L
.63601 .34578 L
.63669 .34578 L
.63742 .34578 L
.63875 .34577 L
.64033 .34575 L
.64177 .34574 L
.64421 .3457 L
.64647 .34566 L
.65161 .34553 L
.66195 .34517 L
.6725 .34469 L
.68245 .34415 L
.70105 .34302 L
.73957 .34043 L
.78054 .3377 L
.81999 .3353 L
.85793 .33325 L
.89833 .33132 L
.9372 .3297 L
.97619 .32826 L
Mfstroke
.02381 .28859 m
.06244 .28686 L
.10458 .28463 L
.14415 .2821 L
.18221 .27914 L
.22272 .27524 L
.26171 .27047 L
.30316 .26392 L
.34309 .25565 L
.3815 .24577 L
.40095 .24056 L
.41127 .23812 L
.41696 .23699 L
.41976 .23652 L
.42237 .23614 L
.42503 .23583 L
.42744 .23561 L
.42882 .23552 L
.43012 .23545 L
.43083 .23543 L
.43149 .23541 L
.43221 .23541 L
.43298 .2354 L
.43413 .23542 L
.43537 .23547 L
.43654 .23553 L
.4376 .23562 L
.43885 .23575 L
.44021 .23592 L
.44268 .23635 L
.44496 .23688 L
.44748 .23762 L
.45257 .2397 L
.45729 .24242 L
.46172 .24576 L
.47155 .25623 L
.47649 .2632 L
.4819 .2721 L
.5004 .30987 L
.51134 .33308 L
.52166 .35188 L
.53092 .3648 L
.53615 .37032 L
.54096 .37434 L
.54563 .37734 L
.55 .37943 L
.5525 .38035 L
.55479 .38104 L
.55742 .38165 L
.55874 .3819 L
Mistroke
.55993 .38208 L
.56109 .38223 L
.56235 .38236 L
.56304 .38242 L
.56367 .38246 L
.56492 .38253 L
.56599 .38256 L
.56716 .38258 L
.56839 .38257 L
.56954 .38254 L
.57019 .38252 L
.5709 .38248 L
.57218 .3824 L
.5746 .38219 L
.57741 .38187 L
.58001 .3815 L
.58966 .37966 L
.59871 .37751 L
.61933 .37199 L
.65807 .36206 L
.69926 .35363 L
.73894 .34742 L
.7771 .34276 L
.81771 .33885 L
.85681 .33581 L
.89836 .33318 L
.93839 .33108 L
.97619 .3294 L
Mfstroke
.02381 .28828 m
.06244 .28647 L
.10458 .28411 L
.14415 .28139 L
.18221 .27815 L
.22272 .27377 L
.26171 .26821 L
.28158 .26467 L
.30316 .26007 L
.34309 .24861 L
.36292 .2408 L
.38395 .23022 L
.40349 .21744 L
.42179 .20208 L
.44032 .18301 L
.45012 .17249 L
.45549 .16736 L
.45813 .16524 L
.46056 .16364 L
.4619 .16293 L
.46332 .16235 L
.46406 .16213 L
.46474 .16197 L
.4655 .16186 L
.46631 .16182 L
.46698 .16184 L
.46771 .16195 L
.4684 .16211 L
.46903 .16233 L
.47024 .16293 L
.47152 .16385 L
.47272 .16502 L
.47401 .16662 L
.47635 .17056 L
.47771 .17351 L
.47914 .17721 L
.48169 .18547 L
.48666 .20821 L
.49129 .23761 L
.50178 .32453 L
.50683 .36635 L
.51231 .40389 L
.51482 .4175 L
.51747 .42934 L
.51977 .43752 L
.52224 .44435 L
.52463 .44925 L
.52681 .45243 L
.52786 .45357 L
.52901 .45454 L
Mistroke
.53009 .45524 L
.53109 .4557 L
.53237 .45605 L
.53357 .45616 L
.53464 .45611 L
.53581 .45589 L
.53708 .45548 L
.53842 .45489 L
.54083 .45347 L
.5458 .44946 L
.55033 .44503 L
.56051 .43406 L
.57885 .4153 L
.59959 .3983 L
.61875 .38624 L
.63737 .37705 L
.65713 .3693 L
.69493 .35836 L
.71432 .35412 L
.73519 .35029 L
.77638 .34433 L
.81606 .34 L
.85422 .33672 L
.89483 .33391 L
.93393 .33169 L
.97548 .32973 L
.97619 .3297 L
Mfstroke
.02381 .2882 m
.06244 .28637 L
.10458 .28397 L
.14415 .2812 L
.18221 .27789 L
.22272 .27338 L
.26171 .2676 L
.28158 .26388 L
.30316 .25901 L
.34309 .24655 L
.36292 .23776 L
.38395 .22535 L
.39336 .21831 L
.40349 .20933 L
.42179 .18788 L
.43189 .17185 L
.44292 .14925 L
.45334 .12105 L
.46301 .08702 L
.46809 .06604 L
.47358 .0422 L
.4761 .03183 L
.47876 .02241 L
.47986 .0193 L
.48104 .01671 L
.48233 .01499 L
.48353 .01472 L
.48478 .01613 L
.48593 .01931 L
.48719 .0253 L
.48783 .02948 L
.48853 .03508 L
.48971 .047 L
.49097 .06384 L
.49327 .10601 L
.49552 .16275 L
.4979 .23655 L
.50214 .38266 L
.50471 .46182 L
.50714 .52063 L
.50932 .55847 L
.51055 .57389 L
.51169 .58475 L
.5129 .59323 L
.51404 .59857 L
.51529 .60199 L
.516 .60296 L
.51664 .60332 L
.51793 .60276 L
.51865 .6018 L
Mistroke
.51933 .60056 L
.52057 .59754 L
.52188 .59351 L
.54025 .51857 L
.55056 .48545 L
.5617 .45849 L
.57222 .43916 L
.58188 .42512 L
.60075 .4047 L
.61145 .39594 L
.62142 .38908 L
.6401 .37873 L
.66038 .37011 L
.68166 .36308 L
.7018 .35777 L
.74263 .34964 L
.78195 .34402 L
.81975 .3399 L
.86001 .33646 L
.89875 .3338 L
.93994 .33149 L
.97619 .32978 L
Mfstroke
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
MathSubEnd
P
% End of sub-graphic
% Start of sub-graphic
p
0.522676 0.00700719 0.97619 0.287295 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.476191 0.0139784 0.0208618 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
0 .01398 m
1 .01398 L
s
.5 0 m
.5 .61803 L
s
.5 Mabswid
.02381 .01944 m
.06244 .02036 L
.10458 .02165 L
.14415 .02322 L
.18221 .02521 L
.22272 .02806 L
.26171 .03184 L
.28158 .0343 L
.30316 .0375 L
.34309 .04527 L
.38395 .05631 L
.4233 .06967 L
.44306 .07655 L
.46114 .08207 L
.47109 .08449 L
.48055 .08623 L
.48572 .08692 L
.4882 .08717 L
.49053 .08737 L
.49186 .08747 L
.49329 .08755 L
.49449 .08761 L
.4958 .08766 L
.49649 .08769 L
.49723 .0877 L
.498 .08772 L
.49873 .08773 L
.49945 .08773 L
.50014 .08774 L
.50143 .08773 L
.50256 .08771 L
.50379 .08768 L
.50495 .08764 L
.50601 .08759 L
.50848 .08744 L
.51108 .08724 L
.51598 .08671 L
.52133 .08593 L
.53088 .08405 L
.53975 .08182 L
.5788 .06893 L
.6203 .05501 L
.66028 .04451 L
.69875 .03719 L
.73966 .03168 L
.77907 .02791 L
.81696 .02526 L
.85729 .02316 L
.89612 .02162 L
.9374 .02037 L
Mistroke
.97619 .01944 L
Mfstroke
.02381 .01687 m
.06244 .01739 L
.10458 .01814 L
.14415 .01908 L
.18221 .02032 L
.20178 .02114 L
.22272 .0222 L
.24259 .02343 L
.26416 .0251 L
.28492 .02715 L
.30409 .02957 L
.32282 .0326 L
.34344 .03701 L
.36285 .04264 L
.38373 .05103 L
.39384 .0563 L
.40486 .06322 L
.42495 .07978 L
.44463 .10199 L
.4656 .13097 L
.47589 .14473 L
.4813 .15093 L
.48425 .15384 L
.48701 .1562 L
.48963 .15808 L
.49202 .15945 L
.49329 .16004 L
.49467 .16058 L
.49543 .16082 L
.49613 .16101 L
.4968 .16116 L
.49752 .16129 L
.49867 .16144 L
.49974 .16149 L
.50103 .16146 L
.5022 .16134 L
.50336 .16113 L
.50463 .1608 L
.50595 .16035 L
.50718 .15983 L
.50981 .15843 L
.51223 .15678 L
.51771 .15196 L
.52764 .14023 L
.54623 .11425 L
.56658 .08857 L
.58563 .07035 L
.6039 .05762 L
.62352 .04778 L
.64469 .04024 L
Mistroke
.66479 .03509 L
.68464 .0313 L
.70304 .0286 L
.7236 .02625 L
.74222 .02456 L
.76313 .02305 L
.78234 .02192 L
.82094 .0202 L
.86048 .01895 L
.89851 .01807 L
.93898 .01737 L
.97619 .01687 L
Mfstroke
.02381 .01545 m
.06244 .01572 L
.10458 .0161 L
.14415 .0166 L
.18221 .01725 L
.20178 .01769 L
.22272 .01827 L
.24259 .01894 L
.26416 .01987 L
.28492 .02104 L
.30409 .02244 L
.32282 .02426 L
.33359 .02558 L
.34344 .02702 L
.36285 .03075 L
.37356 .03351 L
.38373 .03681 L
.39332 .04071 L
.40354 .04602 L
.41318 .05255 L
.42192 .06025 L
.43195 .072 L
.44117 .08678 L
.45129 .10939 L
.45639 .12418 L
.46199 .1437 L
.47285 .19276 L
.48313 .24984 L
.48761 .27384 L
.49237 .2946 L
.49485 .30226 L
.49626 .30542 L
.49691 .30654 L
.49759 .3075 L
.4988 .30863 L
.49991 .30901 L
.50111 .30869 L
.50241 .3075 L
.50367 .30554 L
.50504 .30254 L
.50752 .29499 L
.51216 .27497 L
.52257 .21755 L
.53226 .16781 L
.54132 .1317 L
.55079 .10406 L
.5612 .08254 L
.57134 .06773 L
.58224 .05633 L
.59237 .04858 L
Mistroke
.60342 .04226 L
.61385 .03771 L
.62352 .03439 L
.63411 .03147 L
.64408 .02926 L
.6627 .0261 L
.68282 .02366 L
.7013 .02201 L
.72017 .02072 L
.74084 .01963 L
.76039 .01883 L
.78132 .01815 L
.80117 .01762 L
.82273 .01716 L
.86263 .0165 L
.90346 .01602 L
.94278 .01567 L
.97619 .01545 L
Mfstroke
.02381 .01472 m
.06244 .01485 L
.10458 .01505 L
.14415 .0153 L
.18221 .01563 L
.20178 .01585 L
.22272 .01615 L
.24402 .01652 L
.26416 .01697 L
.28414 .01755 L
.30258 .01824 L
.3213 .01917 L
.33207 .01985 L
.34193 .0206 L
.36134 .02255 L
.37204 .02402 L
.38221 .02579 L
.3918 .02793 L
.40202 .0309 L
.41166 .03466 L
.42041 .03925 L
.42528 .04249 L
.43043 .04662 L
.43965 .05659 L
.44479 .06418 L
.44958 .07317 L
.45484 .08597 L
.46047 .10459 L
.46576 .12885 L
.47065 .16005 L
.4732 .18093 L
.47601 .20873 L
.48171 .28469 L
.48683 .37998 L
.49221 .50001 L
.49443 .54588 L
.49565 .56718 L
.49681 .58355 L
.49746 .59093 L
.49817 .59716 L
.49941 .60332 L
.50067 .6031 L
.50184 .59711 L
.50295 .58646 L
.50415 .57028 L
.50631 .53136 L
.51123 .42228 L
.51599 .32415 L
.52118 .24242 L
.52408 .20768 L
Mistroke
.52677 .18119 L
.53208 .1414 L
.5369 .11563 L
.54204 .09554 L
.54741 .08005 L
.55235 .06929 L
.55777 .06017 L
.56349 .05274 L
.57312 .04369 L
.57858 .03988 L
.58367 .03694 L
.59415 .03226 L
.60406 .02903 L
.61296 .0268 L
.62263 .02489 L
.64245 .02211 L
.65245 .02109 L
.66347 .02017 L
.68285 .01894 L
.70372 .01798 L
.7238 .0173 L
.74492 .01675 L
.78308 .01606 L
.80273 .0158 L
.82369 .01557 L
.86524 .01523 L
.90527 .01499 L
.94379 .01483 L
.97619 .01472 L
Mfstroke
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
MathSubEnd
P
% End of sub-graphic
% End of Graphics
MathPictureEnd
%%PSTrailer
end
grestore

%%EPS Trailer
