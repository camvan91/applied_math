%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 288 288
%%Creator: Mathematica
%%CreationDate: Tue Oct 10 02:50:45 PDT 1995
%%EndComments

/Mathdict 150 dict def
Mathdict begin
/Mlmarg		0 72 mul def
/Mrmarg		0 72 mul def
/Mbmarg		0 72 mul def
/Mtmarg		0 72 mul def
/Mwidth		4 72 mul def
/Mheight	4 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	true	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
Mwidth
Mlmarg Mrmarg add
sub
/Mwidth exch def
Mheight
Mbmarg Mtmarg add
sub
/Mheight exch def
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MFill {
0 0 		moveto
Mwidth 0 	lineto
Mwidth Mheight 	lineto
0 Mheight 	lineto
fill
} bind def
/MPlotRegion {
3 index
Mwidth mul
2 index
Mheight mul
translate
exch sub
Mheight mul
/Mheight
exch def
exch sub
Mwidth mul
/Mwidth
exch def
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mwidth Mheight
7 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
9 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mheight
Mlp
translate
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabsproc {
0
matrix defaultmatrix
dtransform idtransform
dup mul exch
dup mul
add sqrt
} bind def
/Mabswid {
Mabsproc
setlinewidth	
} bind def
/Mabsdash {
exch
[
exch
{
Mabsproc
}
forall
]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse
/Mcharproc
{
currentfile
(x)
readhexstring
pop
0 get
exch
div
} bind def
/Mshadeproc
{
dup
3 1
roll
{
dup
Mcharproc
3 1
roll
} repeat
1 eq
{
setgray
}
{
3 eq
{
setrgbcolor
}
{
setcmykcolor
} ifelse
} ifelse
} bind def
/Mrectproc
{
3 index
2 index
moveto
2 index
3 -1
roll
lineto
dup
3 1
roll
lineto
lineto
fill
} bind def
/Mcolorimage
{
7 1
roll
pop
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
9 index
Mshadeproc
Mrectproc
} for
pop
} for
pop pop pop pop
} bind def
/Mimage
{
pop
matrix
invertmatrix
concat
2 exch exp
1 sub
3 1 roll
1 1
2 index
{
1 1
4 index
{
dup
1 sub
exch
2 index
dup
1 sub
exch
7 index
Mcharproc
setgray
Mrectproc
} for
pop
} for
pop pop pop
} bind def

%%AspectRatio: .61803 
MathPictureStart
%% Graphics
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.047619 0.418508 0.354882 [
[(5)] .2619 .41851 0 2 Msboxa
[(10)] .5 .41851 0 2 Msboxa
[(15)] .7381 .41851 0 2 Msboxa
[(20)] .97619 .41851 0 2 Msboxa
[(-1)] .01131 .06363 1 0 Msboxa
[(-0.75)] .01131 .15235 1 0 Msboxa
[(-0.5)] .01131 .24107 1 0 Msboxa
[(-0.25)] .01131 .32979 1 0 Msboxa
[(0.25)] .01131 .50723 1 0 Msboxa
[(0.5)] .01131 .59595 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.2619 .41851 m
.2619 .42476 L
s
P
[(5)] .2619 .41851 0 2 Mshowa
p
.002 w
.5 .41851 m
.5 .42476 L
s
P
[(10)] .5 .41851 0 2 Mshowa
p
.002 w
.7381 .41851 m
.7381 .42476 L
s
P
[(15)] .7381 .41851 0 2 Mshowa
p
.002 w
.97619 .41851 m
.97619 .42476 L
s
P
[(20)] .97619 .41851 0 2 Mshowa
p
.001 w
.07143 .41851 m
.07143 .42226 L
s
P
p
.001 w
.11905 .41851 m
.11905 .42226 L
s
P
p
.001 w
.16667 .41851 m
.16667 .42226 L
s
P
p
.001 w
.21429 .41851 m
.21429 .42226 L
s
P
p
.001 w
.30952 .41851 m
.30952 .42226 L
s
P
p
.001 w
.35714 .41851 m
.35714 .42226 L
s
P
p
.001 w
.40476 .41851 m
.40476 .42226 L
s
P
p
.001 w
.45238 .41851 m
.45238 .42226 L
s
P
p
.001 w
.54762 .41851 m
.54762 .42226 L
s
P
p
.001 w
.59524 .41851 m
.59524 .42226 L
s
P
p
.001 w
.64286 .41851 m
.64286 .42226 L
s
P
p
.001 w
.69048 .41851 m
.69048 .42226 L
s
P
p
.001 w
.78571 .41851 m
.78571 .42226 L
s
P
p
.001 w
.83333 .41851 m
.83333 .42226 L
s
P
p
.001 w
.88095 .41851 m
.88095 .42226 L
s
P
p
.001 w
.92857 .41851 m
.92857 .42226 L
s
P
p
.002 w
0 .41851 m
1 .41851 L
s
P
p
.002 w
.02381 .06363 m
.03006 .06363 L
s
P
[(-1)] .01131 .06363 1 0 Mshowa
p
.002 w
.02381 .15235 m
.03006 .15235 L
s
P
[(-0.75)] .01131 .15235 1 0 Mshowa
p
.002 w
.02381 .24107 m
.03006 .24107 L
s
P
[(-0.5)] .01131 .24107 1 0 Mshowa
p
.002 w
.02381 .32979 m
.03006 .32979 L
s
P
[(-0.25)] .01131 .32979 1 0 Mshowa
p
.002 w
.02381 .50723 m
.03006 .50723 L
s
P
[(0.25)] .01131 .50723 1 0 Mshowa
p
.002 w
.02381 .59595 m
.03006 .59595 L
s
P
[(0.5)] .01131 .59595 1 0 Mshowa
p
.001 w
.02381 .08137 m
.02756 .08137 L
s
P
p
.001 w
.02381 .09911 m
.02756 .09911 L
s
P
p
.001 w
.02381 .11686 m
.02756 .11686 L
s
P
p
.001 w
.02381 .1346 m
.02756 .1346 L
s
P
p
.001 w
.02381 .17009 m
.02756 .17009 L
s
P
p
.001 w
.02381 .18783 m
.02756 .18783 L
s
P
p
.001 w
.02381 .20558 m
.02756 .20558 L
s
P
p
.001 w
.02381 .22332 m
.02756 .22332 L
s
P
p
.001 w
.02381 .25881 m
.02756 .25881 L
s
P
p
.001 w
.02381 .27656 m
.02756 .27656 L
s
P
p
.001 w
.02381 .2943 m
.02756 .2943 L
s
P
p
.001 w
.02381 .31204 m
.02756 .31204 L
s
P
p
.001 w
.02381 .34753 m
.02756 .34753 L
s
P
p
.001 w
.02381 .36528 m
.02756 .36528 L
s
P
p
.001 w
.02381 .38302 m
.02756 .38302 L
s
P
p
.001 w
.02381 .40076 m
.02756 .40076 L
s
P
p
.001 w
.02381 .43625 m
.02756 .43625 L
s
P
p
.001 w
.02381 .454 m
.02756 .454 L
s
P
p
.001 w
.02381 .47174 m
.02756 .47174 L
s
P
p
.001 w
.02381 .48948 m
.02756 .48948 L
s
P
p
.001 w
.02381 .52497 m
.02756 .52497 L
s
P
p
.001 w
.02381 .54272 m
.02756 .54272 L
s
P
p
.001 w
.02381 .56046 m
.02756 .56046 L
s
P
p
.001 w
.02381 .57821 m
.02756 .57821 L
s
P
p
.001 w
.02381 .04588 m
.02756 .04588 L
s
P
p
.001 w
.02381 .02814 m
.02756 .02814 L
s
P
p
.001 w
.02381 .01039 m
.02756 .01039 L
s
P
p
.001 w
.02381 .61369 m
.02756 .61369 L
s
P
p
.002 w
.02381 0 m
.02381 .61803 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
p
.004 w
s
s
s
s
s
s
.03209 0 m
.03378 .04561 L
s
.03378 .04561 m
.03874 .14278 L
.0437 .21439 L
.05362 .32043 L
.06354 .39937 L
.07346 .46137 L
.08338 .51034 L
.0933 .54808 L
.09826 .56305 L
.10322 .57553 L
.10818 .58561 L
.11314 .59335 L
.11562 .59637 L
.1181 .59883 L
.12058 .60075 L
.12182 .60151 L
.12306 .60213 L
.1243 .60262 L
.12554 .60298 L
.12678 .60321 L
.12802 .60332 L
.12926 .6033 L
.1305 .60315 L
.13174 .60289 L
.13298 .6025 L
.13546 .60136 L
.13794 .59976 L
.1429 .59522 L
.14786 .58899 L
.15282 .58118 L
.16274 .56141 L
.18258 .50927 L
.22226 .38952 L
.2421 .34076 L
.25202 .32245 L
.25698 .31508 L
.26194 .30898 L
.2669 .30418 L
.26938 .30228 L
.27186 .3007 L
.27434 .29946 L
.27558 .29897 L
.27682 .29856 L
.27806 .29823 L
.2793 .29799 L
.28054 .29782 L
.28178 .29774 L
.28302 .29775 L
.28426 .29783 L
.2855 .298 L
Mistroke
.28674 .29824 L
.28798 .29857 L
.28922 .29897 L
.2917 .30002 L
.29418 .30138 L
.29666 .30304 L
.30162 .30725 L
.31154 .31895 L
.32146 .33448 L
.3413 .37387 L
.36114 .41829 L
.38098 .4602 L
.3909 .47806 L
.40082 .4929 L
.40578 .49901 L
.41074 .50418 L
.4157 .50836 L
.41818 .51007 L
.42066 .51152 L
.42314 .51271 L
.42562 .51364 L
.42686 .514 L
.4281 .5143 L
.42934 .51454 L
.43058 .5147 L
.43182 .51481 L
.43306 .51484 L
.4343 .51482 L
.43554 .51472 L
.43678 .51456 L
.43802 .51434 L
.4405 .5137 L
.44298 .51281 L
.44546 .51167 L
.45042 .50866 L
.45538 .50471 L
.46034 .49987 L
.48018 .47304 L
.50002 .43822 L
.51986 .40152 L
.5397 .3691 L
.54962 .3562 L
.55458 .35081 L
.55954 .34621 L
.5645 .34242 L
.56698 .34085 L
.56946 .33949 L
.57194 .33836 L
.57442 .33745 L
.57566 .33707 L
Mistroke
.5769 .33676 L
.57814 .33649 L
.57938 .33629 L
.58062 .33614 L
.58186 .33605 L
.5831 .33601 L
.58434 .33603 L
.58559 .33611 L
.58683 .33624 L
.58807 .33642 L
.58931 .33667 L
.59179 .33731 L
.59427 .33818 L
.59923 .34054 L
.60419 .34373 L
.60915 .3477 L
.61907 .35777 L
.63891 .38465 L
.65875 .41638 L
.67859 .44749 L
.68851 .46116 L
.69843 .47279 L
.70835 .48192 L
.71331 .48544 L
.71827 .4882 L
.72075 .4893 L
.72323 .4902 L
.72571 .4909 L
.72695 .49117 L
.72819 .4914 L
.72943 .49158 L
.73067 .4917 L
.73191 .49178 L
.73315 .49181 L
.73439 .49179 L
.73563 .49171 L
.73687 .49159 L
.73811 .49142 L
.74059 .49093 L
.74307 .49025 L
.74803 .48831 L
.75299 .48563 L
.75795 .48225 L
.76787 .47353 L
.77779 .46256 L
.81747 .40705 L
.83731 .38081 L
.84723 .37009 L
.85219 .36553 L
.85715 .36158 L
Mistroke
.86211 .35826 L
.86707 .35561 L
.86955 .35455 L
.87203 .35366 L
.87451 .35295 L
.87575 .35266 L
.87699 .35242 L
.87823 .35222 L
.87947 .35207 L
.88071 .35197 L
.88195 .3519 L
.88319 .35189 L
.88443 .35192 L
.88567 .35199 L
.88691 .35211 L
.88939 .35248 L
.89063 .35273 L
.89187 .35303 L
.89683 .35465 L
.90179 .35696 L
.90675 .35992 L
.91667 .36764 L
.93651 .38895 L
.97619 .44074 L
Mfstroke
P
P
p
[ .02 .02 ] 0 setdash
p
.004 w
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
.05492 0 m
.06354 .08481 L
s
.06354 .08481 m
.07346 .15415 L
.08338 .21137 L
.10322 .3103 L
.12306 .39712 L
.1429 .47043 L
.15282 .50051 L
.16274 .52541 L
.1677 .53576 L
.17266 .54465 L
.17762 .55204 L
.18258 .55791 L
.18754 .56224 L
.19002 .56383 L
.19126 .56448 L
.1925 .56503 L
.19374 .56549 L
.19498 .56586 L
.19622 .56613 L
.19746 .56631 L
.1987 .56639 L
.19994 .56638 L
.20118 .56628 L
.20242 .56609 L
.20366 .5658 L
.2049 .56542 L
.20738 .5644 L
.20986 .56303 L
.21234 .56131 L
.2173 .55687 L
.22226 .55115 L
.23218 .5362 L
.2421 .51724 L
.26194 .47089 L
.28178 .41999 L
.30162 .37264 L
.31154 .35257 L
.32146 .33592 L
.32642 .32905 L
.33138 .32323 L
.33634 .3185 L
.33882 .31656 L
.3413 .3149 L
.34378 .31353 L
.34626 .31245 L
.3475 .31201 L
.34874 .31165 L
.34998 .31136 L
.35122 .31115 L
.35246 .311 L
Mistroke
.3537 .31093 L
.35494 .31093 L
.35618 .31099 L
.35742 .31113 L
.35866 .31135 L
.3599 .31163 L
.36114 .31198 L
.36362 .31289 L
.3661 .31407 L
.37106 .31724 L
.37602 .32143 L
.38098 .32658 L
.40082 .35543 L
.42066 .39316 L
.4405 .43321 L
.46034 .46897 L
.47026 .48341 L
.47522 .48952 L
.48018 .4948 L
.48514 .49921 L
.4901 .50271 L
.49258 .50411 L
.49506 .50527 L
.49754 .5062 L
.49878 .50657 L
.50002 .50688 L
.50126 .50714 L
.5025 .50733 L
.50374 .50746 L
.50498 .50754 L
.50622 .50755 L
.50746 .5075 L
.5087 .5074 L
.50994 .50723 L
.51118 .50701 L
.51242 .50672 L
.5149 .50598 L
.51738 .50501 L
.51986 .50381 L
.52482 .50075 L
.52978 .49684 L
.5397 .48668 L
.55954 .45884 L
.57938 .4253 L
.59923 .39179 L
.60915 .37683 L
.61907 .36389 L
.62899 .3535 L
.63395 .34938 L
.63891 .34604 L
Mistroke
.64139 .34467 L
.64387 .3435 L
.64635 .34255 L
.64883 .34179 L
.65007 .3415 L
.65131 .34125 L
.65255 .34106 L
.65379 .34092 L
.65503 .34083 L
.65627 .3408 L
.65751 .34082 L
.65875 .34089 L
.65999 .34101 L
.66123 .34118 L
.66371 .34169 L
.66619 .34239 L
.66867 .34331 L
.67363 .34572 L
.67859 .3489 L
.68851 .35738 L
.69843 .36834 L
.73811 .42601 L
.75795 .45428 L
.76787 .46613 L
.77779 .47579 L
.78275 .47967 L
.78771 .48287 L
.79019 .4842 L
.79267 .48535 L
.79515 .48632 L
.79763 .4871 L
.80011 .4877 L
.80135 .48792 L
.80259 .4881 L
.80383 .48823 L
.80507 .48832 L
.80631 .48836 L
.80755 .48835 L
.80879 .48829 L
.81003 .48819 L
.81127 .48804 L
.81251 .48784 L
.81499 .4873 L
.81747 .48659 L
.82243 .48461 L
.82739 .48193 L
.83731 .47462 L
.84723 .46499 L
.85715 .45348 L
.89683 .39961 L
Mistroke
.90675 .38709 L
.91667 .37607 L
.92659 .36698 L
.93651 .3602 L
.94147 .35777 L
.94395 .3568 L
.94643 .356 L
.94891 .35537 L
.95015 .35512 L
.95139 .35492 L
.95263 .35475 L
.95387 .35463 L
.95511 .35456 L
.95635 .35453 L
.95759 .35454 L
.95883 .35459 L
.96007 .35469 L
.96131 .35483 L
.96379 .35523 L
.96627 .35581 L
.96875 .35656 L
.97123 .35747 L
.97619 .35977 L
Mfstroke
P
P
P
% End of Graphics
MathPictureEnd
end
