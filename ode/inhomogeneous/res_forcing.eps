%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 288 177
%%HiResBoundingBox: 0 0 288 177.938
%%Creator: (Mathematica X 3.0)
%%Title: Clipboard
%%CreationDate: (Sometime) (Sometime)
%%DocumentNeededResources: (atend)
%%DocumentFonts: (atend)
%%DocumentNeededFonts: (atend)
%%EndComments
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def
/Mnodistort true def
/colorimage where
{ pop /Mcolorimage {colorimage} bind def /Mimage {image} bind def}
{
/colorimage {Mcolorimage} bind def
} ifelse
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		288.000000 def
/Mheight	177.937500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.018947 0.318517 0.0120879 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
0 .31852 m
1 .31852 L
s
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .31852 m
.02499 .31852 L
.02605 .31852 L
.02729 .31853 L
.02846 .31855 L
.02954 .31857 L
.03053 .31861 L
.03163 .31866 L
.03279 .31873 L
.03395 .31882 L
.0352 .31894 L
.03746 .31923 L
.04016 .31972 L
.04262 .3203 L
.04748 .32186 L
.05278 .32417 L
.06244 .32947 L
.06789 .33256 L
.07302 .33508 L
.07586 .33617 L
.07735 .33663 L
.07893 .33702 L
.08026 .33726 L
.08102 .33737 L
.08173 .33744 L
.08297 .3375 L
.08366 .3375 L
.08429 .33748 L
.08555 .33737 L
.08619 .33728 L
.08689 .33716 L
.08812 .33687 L
.08928 .33651 L
.0919 .33542 L
.09471 .33376 L
.09986 .32949 L
.10458 .32427 L
.1145 .31034 L
.12511 .29451 L
.13025 .28807 L
.13278 .28549 L
.13511 .28354 L
.13723 .28215 L
.1383 .28161 L
.13947 .28113 L
.14065 .2808 L
.14192 .28059 L
.14311 .28055 L
.1442 .28064 L
.14544 .2809 L
Mistroke
.14655 .28128 L
.14784 .28189 L
.14906 .28263 L
.15122 .28435 L
.15356 .28679 L
.15887 .29445 L
.16375 .30378 L
.18231 .34854 L
.18703 .35878 L
.18962 .36363 L
.19207 .36757 L
.19436 .3706 L
.19556 .37192 L
.19684 .37311 L
.19791 .37393 L
.19909 .37463 L
.20017 .37509 L
.20117 .37537 L
.20239 .37548 L
.20307 .37544 L
.20371 .37534 L
.205 .37493 L
.20572 .37459 L
.20637 .3742 L
.20755 .37333 L
.20882 .37214 L
.21113 .36932 L
.21384 .36494 L
.21671 .35912 L
.22185 .34599 L
.23204 .31285 L
.24169 .27967 L
.24589 .26699 L
.25036 .2558 L
.25268 .25116 L
.25526 .24711 L
.25638 .24572 L
.25759 .2445 L
.25874 .24361 L
.25979 .24304 L
.26093 .24267 L
.26214 .24257 L
.26328 .24277 L
.26432 .24319 L
.26554 .24398 L
.26623 .24456 L
.26687 .2452 L
.26928 .24837 L
.27159 .25254 L
.27413 .25837 L
Mistroke
.27928 .27374 L
.2902 .31796 L
.30018 .36227 L
.30495 .38097 L
.30746 .38958 L
.31014 .39752 L
.31272 .40379 L
.31505 .40821 L
.31618 .40988 L
.3174 .41133 L
.31855 .41237 L
.31961 .41302 L
.32082 .41341 L
.32211 .41339 L
.32334 .41297 L
.32445 .41224 L
.32576 .41096 L
.32718 .40906 L
.32977 .40424 L
.33247 .39741 L
.33534 .38825 L
.34049 .36747 L
.35009 .3185 L
.3602 .26402 L
.36437 .24425 L
.36883 .22662 L
.37139 .21854 L
.37372 .21269 L
.37484 .2104 L
.37606 .20834 L
.3772 .2068 L
.37826 .20573 L
.37938 .20498 L
.38058 .20461 L
.38171 .20468 L
.38274 .2051 L
.38395 .20602 L
.38527 .20756 L
.38652 .20952 L
.38767 .21176 L
.3902 .21812 L
.39249 .22551 L
.39762 .24719 L
.40837 .30941 L
.41848 .37426 L
.42356 .40319 L
.42828 .42536 L
.43087 .43495 L
.43322 .4419 L
.43447 .44486 L
Mistroke
.43583 .44748 L
.43657 .44864 L
.43726 .44953 L
.43797 .45027 L
.43862 .45079 L
.43968 .45131 L
.44082 .45141 L
.44188 .45106 L
.44289 .45035 L
.44405 .44905 L
.44514 .4474 L
.44632 .44509 L
.44759 .44206 L
.45016 .43418 L
.45258 .42471 L
.45711 .40217 L
.47548 .27337 L
.48051 .23817 L
.48591 .20595 L
.48852 .19322 L
.491 .18322 L
.49323 .17613 L
.49447 .17298 L
.49565 .17058 L
.49679 .16878 L
.49803 .16743 L
.4987 .16697 L
.4994 .16669 L
.50066 .16671 L
.50198 .16745 L
.50321 .1688 L
.50392 .16987 L
.50456 .17102 L
.506 .17422 L
.50836 .18133 L
.51092 .19154 L
.51558 .21616 L
.52653 .29727 L
.53664 .38223 L
.54131 .41795 L
.54632 .45024 L
.54875 .46289 L
.55106 .47282 L
.55313 .47985 L
.55422 .48279 L
.55539 .48538 L
.55612 .48667 L
.55679 .48764 L
.55811 .48893 L
.55931 .48939 L
Mistroke
.56058 .48914 L
.56123 .48871 L
.56194 .48802 L
.56321 .48617 L
.56399 .48466 L
.56472 .48298 L
.5661 .47914 L
.56857 .47008 L
.57086 .45932 L
.57603 .42734 L
.58579 .34543 L
.59631 .24671 L
.60115 .20569 L
.60624 .1698 L
.61059 .14709 L
.61178 .14234 L
.61305 .13802 L
.61414 .13495 L
.61533 .13226 L
.61657 .13025 L
.61788 .129 L
.61909 .12864 L
.62023 .12901 L
.62091 .12956 L
.62156 .13032 L
.62278 .13234 L
.6241 .13538 L
.62553 .13972 L
.62795 .14941 L
.63052 .16283 L
.63514 .19428 L
.64369 .27151 L
.65312 .36973 L
.66253 .45801 L
.66726 .49165 L
.66994 .50627 L
.67244 .5166 L
.67385 .52097 L
.67455 .52271 L
.67519 .52407 L
.67639 .526 L
.67769 .52716 L
.67899 .52733 L
.67973 .52699 L
.68042 .52639 L
.68114 .52545 L
.68181 .52433 L
.68331 .52086 L
.68458 .51692 L
.68575 .51245 L
Mistroke
.68842 .49951 L
.69328 .46663 L
.71209 .2694 L
.72197 .16713 L
.72695 .12853 L
.72978 .11208 L
.73242 .10076 L
.73387 .09629 L
.73458 .09457 L
.73524 .09325 L
.73647 .09151 L
.73712 .09097 L
.7378 .09069 L
.73849 .09071 L
.73922 .09107 L
.73991 .09172 L
.74055 .09258 L
.74125 .09383 L
.74202 .09556 L
.74358 .10018 L
.74492 .10539 L
.74615 .11108 L
.74889 .12703 L
.75384 .16597 L
.76422 .27933 L
.77401 .4006 L
.77903 .45756 L
.78374 .50275 L
.7863 .523 L
.78864 .53835 L
.79124 .55156 L
.79267 .55702 L
.79403 .56095 L
.79519 .56334 L
.79625 .56471 L
.79747 .56535 L
.79861 .56502 L
.79968 .5639 L
.80065 .56219 L
.80173 .55956 L
.80286 .55593 L
.80524 .54555 L
.80745 .53258 L
.81248 .49229 L
.83116 .26152 L
.84101 .14223 L
.84598 .09713 L
.8488 .07786 L
.85145 .06454 L
.85288 .05937 L
Mistroke
.85358 .05736 L
.85423 .05581 L
.85545 .05375 L
.85609 .0531 L
.85678 .05274 L
.85752 .05274 L
.85833 .05321 L
.85909 .05409 L
.85979 .05528 L
.86042 .05667 L
.86111 .05853 L
.86252 .06336 L
.86507 .07574 L
.8678 .094 L
.87274 .13882 L
.88327 .27214 L
.89287 .41015 L
.89767 .47364 L
.90277 .53089 L
.90713 .56826 L
.90961 .58391 L
.91194 .59455 L
.91315 .59845 L
.91384 .60017 L
.91448 .60143 L
.91577 .60301 L
.91649 .60332 L
.91715 .60324 L
.91833 .60224 L
.9196 .59991 L
.92081 .59653 L
.92192 .59239 L
.92441 .57972 L
.92715 .56047 L
.93269 .50623 L
.94349 .3578 L
.95375 .20106 L
.95821 .13994 L
.96296 .08513 L
.9657 .05979 L
.96817 .04135 L
.96937 .03409 L
.97066 .02749 L
.97181 .02279 L
.97301 .01898 L
.9738 .01713 L
.97467 .0157 L
.97545 .01494 L
.97619 .01472 L
Mfstroke
% End of Graphics
MathPictureEnd
%%PSTrailer
end
grestore

%%EPS Trailer
