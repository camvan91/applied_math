%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 288 84
%%HiResBoundingBox: 0 0 288 84.75
%%Creator: (Mathematica X 3.0)
%%Title: Clipboard
%%CreationDate: (Sometime) (Sometime)
%%DocumentNeededResources: (atend)
%%DocumentFonts: (atend)
%%DocumentNeededFonts: (atend)
%%EndComments
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def
/Mnodistort true def
/colorimage where
{ pop /Mcolorimage {colorimage} bind def /Mimage {image} bind def}
{
/colorimage {Mcolorimage} bind def
} ifelse
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		288.000000 def
/Mheight	84.750000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .2943 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.00700719 0.47619 [
[ 0 0 0 0 ]
[ 1 .2943 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .2943 L
0 .2943 L
closepath
clip
newpath
% Start of sub-graphic
p
0.0238095 0.00700719 0.477324 0.287295 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.190476 0.603319 1.36537 [
[.21429 .59082 -3 -9 ]
[.21429 .59082 3 0 ]
[.40476 .59082 -3 -9 ]
[.40476 .59082 3 0 ]
[.59524 .59082 -3 -9 ]
[.59524 .59082 3 0 ]
[.78571 .59082 -3 -9 ]
[.78571 .59082 3 0 ]
[.97619 .59082 -3 -9 ]
[.97619 .59082 3 0 ]
[.01131 .05717 -24 -4.5 ]
[.01131 .05717 0 4.5 ]
[.01131 .19371 -24 -4.5 ]
[.01131 .19371 0 4.5 ]
[.01131 .33024 -24 -4.5 ]
[.01131 .33024 0 4.5 ]
[.01131 .46678 -24 -4.5 ]
[.01131 .46678 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.21429 .60332 m
.21429 .60957 L
s
[(1)] .21429 .59082 0 1 Mshowa
.40476 .60332 m
.40476 .60957 L
s
[(2)] .40476 .59082 0 1 Mshowa
.59524 .60332 m
.59524 .60957 L
s
[(3)] .59524 .59082 0 1 Mshowa
.78571 .60332 m
.78571 .60957 L
s
[(4)] .78571 .59082 0 1 Mshowa
.97619 .60332 m
.97619 .60957 L
s
[(5)] .97619 .59082 0 1 Mshowa
.125 Mabswid
.0619 .60332 m
.0619 .60707 L
s
.1 .60332 m
.1 .60707 L
s
.1381 .60332 m
.1381 .60707 L
s
.17619 .60332 m
.17619 .60707 L
s
.25238 .60332 m
.25238 .60707 L
s
.29048 .60332 m
.29048 .60707 L
s
.32857 .60332 m
.32857 .60707 L
s
.36667 .60332 m
.36667 .60707 L
s
.44286 .60332 m
.44286 .60707 L
s
.48095 .60332 m
.48095 .60707 L
s
.51905 .60332 m
.51905 .60707 L
s
.55714 .60332 m
.55714 .60707 L
s
.63333 .60332 m
.63333 .60707 L
s
.67143 .60332 m
.67143 .60707 L
s
.70952 .60332 m
.70952 .60707 L
s
.74762 .60332 m
.74762 .60707 L
s
.82381 .60332 m
.82381 .60707 L
s
.8619 .60332 m
.8619 .60707 L
s
.9 .60332 m
.9 .60707 L
s
.9381 .60332 m
.9381 .60707 L
s
.25 Mabswid
0 .60332 m
1 .60332 L
s
.02381 .05717 m
.03006 .05717 L
s
[(-0.4)] .01131 .05717 1 0 Mshowa
.02381 .19371 m
.03006 .19371 L
s
[(-0.3)] .01131 .19371 1 0 Mshowa
.02381 .33024 m
.03006 .33024 L
s
[(-0.2)] .01131 .33024 1 0 Mshowa
.02381 .46678 m
.03006 .46678 L
s
[(-0.1)] .01131 .46678 1 0 Mshowa
.125 Mabswid
.02381 .08448 m
.02756 .08448 L
s
.02381 .11178 m
.02756 .11178 L
s
.02381 .13909 m
.02756 .13909 L
s
.02381 .1664 m
.02756 .1664 L
s
.02381 .22101 m
.02756 .22101 L
s
.02381 .24832 m
.02756 .24832 L
s
.02381 .27563 m
.02756 .27563 L
s
.02381 .30294 m
.02756 .30294 L
s
.02381 .35755 m
.02756 .35755 L
s
.02381 .38486 m
.02756 .38486 L
s
.02381 .41217 m
.02756 .41217 L
s
.02381 .43947 m
.02756 .43947 L
s
.02381 .49409 m
.02756 .49409 L
s
.02381 .5214 m
.02756 .5214 L
s
.02381 .5487 m
.02756 .5487 L
s
.02381 .57601 m
.02756 .57601 L
s
.02381 .02986 m
.02756 .02986 L
s
.02381 .00255 m
.02756 .00255 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .60332 m
.06244 .50074 L
.10458 .38388 L
.14415 .26443 L
.18221 .13578 L
.19311 .09571 L
.20342 .05631 L
.20791 .03864 L
.21037 .02884 L
.21267 .01957 L
.21387 .01472 L
.21516 .01572 L
.21589 .01798 L
.21659 .02011 L
.21789 .0241 L
.22272 .03858 L
.26171 .14313 L
.2999 .22674 L
.34055 .2991 L
.37968 .35559 L
.42126 .40418 L
.46133 .44196 L
.49988 .47152 L
.54088 .49705 L
.58037 .51694 L
.61834 .53256 L
.65876 .54609 L
.69767 .55666 L
.73903 .56577 L
.77888 .57286 L
.81721 .57841 L
.85799 .58321 L
.89726 .58696 L
.93501 .5899 L
.97521 .59245 L
.97619 .59251 L
s
MathSubEnd
P
% End of sub-graphic
% Start of sub-graphic
p
0.522676 0.00700719 0.97619 0.287295 MathSubStart
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.190476 0.603319 1.0389 [
[.21429 .59082 -3 -9 ]
[.21429 .59082 3 0 ]
[.40476 .59082 -3 -9 ]
[.40476 .59082 3 0 ]
[.59524 .59082 -3 -9 ]
[.59524 .59082 3 0 ]
[.78571 .59082 -3 -9 ]
[.78571 .59082 3 0 ]
[.97619 .59082 -3 -9 ]
[.97619 .59082 3 0 ]
[.01131 .08387 -24 -4.5 ]
[.01131 .08387 0 4.5 ]
[.01131 .18776 -24 -4.5 ]
[.01131 .18776 0 4.5 ]
[.01131 .29165 -24 -4.5 ]
[.01131 .29165 0 4.5 ]
[.01131 .39554 -24 -4.5 ]
[.01131 .39554 0 4.5 ]
[.01131 .49943 -24 -4.5 ]
[.01131 .49943 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.21429 .60332 m
.21429 .60957 L
s
[(1)] .21429 .59082 0 1 Mshowa
.40476 .60332 m
.40476 .60957 L
s
[(2)] .40476 .59082 0 1 Mshowa
.59524 .60332 m
.59524 .60957 L
s
[(3)] .59524 .59082 0 1 Mshowa
.78571 .60332 m
.78571 .60957 L
s
[(4)] .78571 .59082 0 1 Mshowa
.97619 .60332 m
.97619 .60957 L
s
[(5)] .97619 .59082 0 1 Mshowa
.125 Mabswid
.0619 .60332 m
.0619 .60707 L
s
.1 .60332 m
.1 .60707 L
s
.1381 .60332 m
.1381 .60707 L
s
.17619 .60332 m
.17619 .60707 L
s
.25238 .60332 m
.25238 .60707 L
s
.29048 .60332 m
.29048 .60707 L
s
.32857 .60332 m
.32857 .60707 L
s
.36667 .60332 m
.36667 .60707 L
s
.44286 .60332 m
.44286 .60707 L
s
.48095 .60332 m
.48095 .60707 L
s
.51905 .60332 m
.51905 .60707 L
s
.55714 .60332 m
.55714 .60707 L
s
.63333 .60332 m
.63333 .60707 L
s
.67143 .60332 m
.67143 .60707 L
s
.70952 .60332 m
.70952 .60707 L
s
.74762 .60332 m
.74762 .60707 L
s
.82381 .60332 m
.82381 .60707 L
s
.8619 .60332 m
.8619 .60707 L
s
.9 .60332 m
.9 .60707 L
s
.9381 .60332 m
.9381 .60707 L
s
.25 Mabswid
0 .60332 m
1 .60332 L
s
.02381 .08387 m
.03006 .08387 L
s
[(-0.5)] .01131 .08387 1 0 Mshowa
.02381 .18776 m
.03006 .18776 L
s
[(-0.4)] .01131 .18776 1 0 Mshowa
.02381 .29165 m
.03006 .29165 L
s
[(-0.3)] .01131 .29165 1 0 Mshowa
.02381 .39554 m
.03006 .39554 L
s
[(-0.2)] .01131 .39554 1 0 Mshowa
.02381 .49943 m
.03006 .49943 L
s
[(-0.1)] .01131 .49943 1 0 Mshowa
.125 Mabswid
.02381 .10465 m
.02756 .10465 L
s
.02381 .12542 m
.02756 .12542 L
s
.02381 .1462 m
.02756 .1462 L
s
.02381 .16698 m
.02756 .16698 L
s
.02381 .20854 m
.02756 .20854 L
s
.02381 .22931 m
.02756 .22931 L
s
.02381 .25009 m
.02756 .25009 L
s
.02381 .27087 m
.02756 .27087 L
s
.02381 .31243 m
.02756 .31243 L
s
.02381 .3332 m
.02756 .3332 L
s
.02381 .35398 m
.02756 .35398 L
s
.02381 .37476 m
.02756 .37476 L
s
.02381 .41632 m
.02756 .41632 L
s
.02381 .43709 m
.02756 .43709 L
s
.02381 .45787 m
.02756 .45787 L
s
.02381 .47865 m
.02756 .47865 L
s
.02381 .52021 m
.02756 .52021 L
s
.02381 .54098 m
.02756 .54098 L
s
.02381 .56176 m
.02756 .56176 L
s
.02381 .58254 m
.02756 .58254 L
s
.02381 .06309 m
.02756 .06309 L
s
.02381 .04231 m
.02756 .04231 L
s
.02381 .02153 m
.02756 .02153 L
s
.02381 .00076 m
.02756 .00076 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .22113 m
.02499 .22112 L
.02605 .2211 L
.02729 .22107 L
.02846 .22102 L
.03053 .22089 L
.03279 .2207 L
.03527 .22044 L
.0379 .22008 L
.04262 .21926 L
.04749 .21817 L
.05205 .21692 L
.06244 .21324 L
.07305 .20829 L
.08274 .20269 L
.10458 .18625 L
.12357 .16751 L
.14429 .14209 L
.16561 .11025 L
.18493 .07604 L
.19461 .05689 L
.20508 .03459 L
.20989 .02378 L
.21116 .02087 L
.21252 .01772 L
.2138 .01472 L
.21497 .01568 L
.21603 .01896 L
.21719 .02251 L
.2193 .0289 L
.22406 .04308 L
.26485 .15106 L
.30411 .23531 L
.34186 .30147 L
.38207 .35891 L
.42075 .40383 L
.46189 .44258 L
.50152 .47277 L
.53963 .49644 L
.58019 .51694 L
.61923 .53295 L
.66073 .54673 L
.70071 .55744 L
.73918 .56583 L
.7801 .57308 L
.8195 .57873 L
.85739 .58316 L
.89773 .58701 L
.93655 .59002 L
.97619 .59252 L
Mistroke
Mfstroke
MathSubEnd
P
% End of sub-graphic
% End of Graphics
MathPictureEnd
%%PSTrailer
end
grestore

%%EPS Trailer
